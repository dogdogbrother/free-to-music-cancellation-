{"version":3,"sources":["layout/aside/index.js","pages/default-search-page/index.js","pages/song-menu/index.js","rxStore/playRx.js","components/song-list/index.js","pages/wy-search-result/index.js","pages/qq-search-result/index.js","pages/sl-search-result/index.js","layout/main/index.js","components/audio-play/index.js","layout/index.js","App.js","serviceWorker.js","index.js"],"names":["Aside","test","className","children","match","location","pathname","to","type","Title","Typography","Paragraph","Text","Presentation","level","strong","mark","underline","QqExplain","WyExplain","DefaultSearchPage","Search","Input","useState","platform","setPlatform","SearchButton","withRouter","history","placeholder","enterButton","size","onSearch","value","searchVlue","push","state","handlerSearch","style","width","Group","defaultValue","buttonStyle","onChange","evnt","target","Button","SongMenu","currentPlay","BehaviorSubject","url","img","name","art","id","setCurrentPlay","obj","play","next","playList","pushPlayList","list","setFormat","number","res","Math","floor","SongList","listData","playSong","song","action","isExist","find","item","source","getQqUrl","getSlUrl","getWyUrl","axios","get","then","data","req_0","midurlinfo","purl","span","map","index","key","title","placement","onClick","album","duration","WySearchResultRouter","props","songList","setSongList","useEffect","pathState","result","code","songs","artists","singers","join","QQsearchResultRouter","singer","interval","mid","SlSearchResultRouter","LayoutMain","exact","path","component","SlsearchResultRouter","AudioPlay","useObservable","asObservable","pList","showListBox","setShowListBox","nextPlay","forEach","length","deleteSongListItem","splice","deletePlayList","src","controls","autoPlay","onEnded","alert","Layout","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec194162.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { Icon } from 'antd';\r\nimport './style.scss'\r\n\r\nconst Aside = ({ test })=> {\r\n  return(\r\n    <div className=\"layout-aside-box p-20\">\r\n      <h1 className=\"logo-module\">\r\n        <span>请登录</span>\r\n      </h1>\r\n        <div>\r\n          <p className=\"menu-title\">在线音乐</p>\r\n          <ul>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/' ? 'aside-active' : ''}>\r\n                  <Link to=\"/\">\r\n                    <Icon type=\"search\"/><span>搜索歌曲</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/song-menu' ? 'aside-active' : ''}>\r\n                  <Link to=\"/song-menu\">\r\n                    <Icon type=\"customer-service\"/><span>查看歌单</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n          </ul>\r\n        </div>\r\n          <div>\r\n            <p className=\"menu-title\">我的音乐</p>\r\n            <ul>\r\n              <li>\r\n                <Icon type=\"heart\"/>\r\n                <span>我的喜欢</span>\r\n              </li>\r\n              <li>\r\n                <Icon type=\"desktop\" />\r\n                <span>本地和下载</span>  \r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n          <p className=\"menu-title\">音乐台介绍</p>\r\n          <ul>\r\n            <li>\r\n              <Icon type=\"exception\"/>\r\n              <span>功能介绍</span>\r\n            </li>\r\n            <li>\r\n              <Icon type=\"pushpin\" />\r\n              <span>我要提意见</span>  \r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Aside","/**\r\n  hooks的值有\r\n    1. platform,0为QQ音乐/1为网易云音乐/2为林悦台\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Typography, Input, Radio  } from 'antd';\r\nimport './style.scss'\r\nimport { withRouter } from \"react-router-dom\";\r\nconst { Title, Paragraph, Text } = Typography\r\nconst DefaultSearchPage = ()=> {\r\n  const { Search } = Input;\r\n  const [platform, setPlatform] = useState(0);\r\n  /**\r\n   * \r\n   */\r\n  const handlerSearch = (searchVlue,history)=> {  \r\n    //点击搜索按钮时执行此函数,给新路由带上搜索的 search 值和 platform 值\r\n    if (platform === 0) {\r\n      history.push({ pathname:'qq-search-result', state:{ searchVlue, platform }})\r\n    }else if(platform === 1){\r\n      history.push({ pathname:'wy-search-result', state:{ searchVlue, platform }})\r\n    }else{\r\n      history.push({ pathname:'sl-search-result', state:{ searchVlue, platform }})\r\n    }\r\n    \r\n  }\r\n  const SearchButton = withRouter(({history})=>{\r\n    return (\r\n      <Search\r\n        placeholder=\"暂时只支持搜索歌曲名称\"\r\n        enterButton=\"搜索\"\r\n        size=\"large\"\r\n        onSearch={value => { handlerSearch(value,history) }}\r\n        style={{ width: 280 }}\r\n      />\r\n    )\r\n  })\r\n  return(\r\n    <div className=\"default-search-page\">\r\n      <Presentation/>\r\n      <div className=\"search-box\">\r\n        <div className=\"m-b-20\">\r\n          <SearchButton/>\r\n        </div>\r\n        <div className=\"m-b-20\">\r\n          <Radio.Group defaultValue={platform} buttonStyle=\"solid\" onChange={(evnt)=>{setPlatform(evnt.target.value)}}>\r\n            <Radio.Button value={0}>QQ音乐</Radio.Button>\r\n            <Radio.Button value={1}>网易云音乐</Radio.Button>\r\n            <Radio.Button value={2}>林悦台</Radio.Button>\r\n          </Radio.Group>\r\n        </div>\r\n        <div>\r\n          { platform === 0 && <QqExplain/> }\r\n          { platform === 1 && <WyExplain/> }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * 搜索页面的介绍组件\r\n */\r\nconst Presentation = ()=> {\r\n  return(\r\n    <div className=\"presentation\">\r\n      <div>\r\n        <Title level={2}>搜索功能介绍</Title>\r\n        <Paragraph>\r\n          你可以通过选择下面的按钮来控制你搜索的结果来源是<Text strong> 网易云音乐 </Text>还是<Text strong> QQ音乐 </Text>.\r\n          如果因为 <Text mark>版权</Text> 或是 <Text mark>封禁原因</Text> 而搜索不到歌曲或是播放不成功时,可以选择 <Text strong> 林悦台 </Text>试一试.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          <Text strong> 林悦台 </Text>是我个人的服务器,里面上传了一些百度云下载的音乐,目前已上传的有 <Text underline>周杰伦</Text> 的大部分歌曲, <Text underline>李志</Text> 的全部歌曲.\r\n          如果后续有时间也同样能力的话,我会写一个上传接口,提供用户自定义上传歌曲.\r\n        </Paragraph>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n *搜索页面的搜索功能组件\r\n */\r\nconst QqExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>QQ音乐的说明</Title>\r\n      <Paragraph>\r\n        你有可能会<Text strong> 播放失败 </Text>是因为有些曲目因为版权问题无法找到资源,暂时这样,后面我再想办法优化.如果你发现播放失败,请在播放列表中删除它吧\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\nconst WyExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>网易云音乐的说明</Title>\r\n      <Paragraph>\r\n        相比较恶心的QQ音乐,网易云的接口就很友好了,github上有nodeJS版本的API,绝大功能都有,如果你需要网易云音乐的一些功能,请<Text strong> 私聊我 </Text>或是在<Text strong> 我要提意见 </Text>里面提出\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DefaultSearchPage","import React from 'react'\r\n\r\n\r\nconst SongMenu = ()=> {\r\n  return(\r\n    <div className=\"defaule-page\">歌单页面</div>\r\n  )\r\n}\r\n\r\nexport default SongMenu","import { BehaviorSubject } from \"rxjs\";\r\n\r\nexport const currentPlay = new BehaviorSubject({\r\n  url:'',\r\n  img:'',\r\n  name:'',\r\n  art:'', //歌手\r\n  id:'',\r\n})\r\n\r\nexport const setCurrentPlay = (obj)=>{ \r\n  let play = currentPlay.value;\r\n  currentPlay.next({\r\n    ...play,\r\n    ...obj\r\n  })\r\n}\r\n\r\n//播放列表是个数组,里面存的是对象,对应的就是当前播放的格式\r\nexport const playList = new BehaviorSubject([])\r\n\r\nexport const pushPlayList = (obj)=>{\r\n  //其实push进来应该有别的操作,例如检查这个歌曲是否已经在列表中了,没有的话再添加\r\n  let list = playList.value\r\n  playList.next([...list,obj])\r\n}\r\n\r\nexport const deletePlayList = (index)=>{\r\n  playList.value.splice(index,1)\r\n  playList.next([...playList.value])\r\n}\r\n\r\n","/**\r\n *  listDta 是数据格式定义好了的数组内容,要求有如下\r\n *  {\r\n *    name:string,      歌曲名字\r\n *    art:string,       作家名字\r\n *    album:tring       专辑名称\r\n *    duration:number   时长,这个组件内处理\r\n *    source:qq or wy   来自于哪个资源\r\n *    id:number         歌曲的id,用于搜索的唯一键\r\n *  }\r\n * \r\n *  点击播放的话,先判断是qq还是网易,网易的比较好办,有现成的接口,qq的有加密有点麻烦,虽然多处理处理\r\n */\r\n\r\nimport React from 'react'\r\nimport { Row, Col, Icon, Tooltip } from 'antd'\r\nimport axios from 'axios'\r\nimport { setCurrentPlay, playList, pushPlayList } from '../../rxStore/playRx'\r\nimport './style.scss'\r\n\r\nconst SongList = ({listData})=>{\r\n\r\n  const playSong = (song,action) => {\r\n    //在申请网络接口前,我们要先判断下播放列表中是否有了这首歌,有的话就播放这个首歌,不要请求接口\r\n    const isExist = playList.value.find(item=>item.id===song.id)\r\n    if (isExist) return setCurrentPlay(isExist)\r\n    if (song.source === 'qq') return getQqUrl(song,action)\r\n    if (song.source === 'sl') return getSlUrl(song,action)\r\n    getWyUrl(song,action)\r\n  }\r\n  const getQqUrl = (song,action) => {\r\n    // qq音乐的实在是麻烦了,先用mid(id)申请个接口,接口里面有一个purl,拿到这个再拼接一下才能拿到真正播放地址\r\n    axios.get(`/qpi/songUrl?id=${song.id}`).then(res=>{\r\n      let url = 'http://122.226.161.25/amobile.music.tc.qq.com/'+res.data.req_0.data.midurlinfo[0].purl\r\n      //拿到了播放地址,要做两个操作.一个是切换当前播放歌曲,二是push进播放列表 \r\n      if (!action) {     \r\n        setCurrentPlay({\r\n          url,\r\n          id:song.id,\r\n          name:song.name,\r\n          art:song.art,\r\n          img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n        })\r\n      }\r\n      pushPlayList({\r\n        art:song.art,\r\n        url,\r\n        id:song.id,\r\n        name:song.name,\r\n        img:'',\r\n      })\r\n    })\r\n  }\r\n  const getWyUrl = (song,action) => {\r\n    axios.get(`/wpi/song/url?id=${song.id}`).then(res=>{\r\n      if (!action) {\r\n        setCurrentPlay({\r\n          url:res.data.data[0].url,\r\n          id:song.id,\r\n          name:song.name,\r\n          art:song.art,\r\n          img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n        })\r\n      }\r\n      pushPlayList({\r\n        art:song.art,\r\n        url:res.data.data[0].url,\r\n        id:song.id,\r\n        name:song.name,\r\n        img:'',\r\n      })\r\n    })\r\n  }\r\n  const getSlUrl = (song,action) => {\r\n    if (!action) {\r\n      setCurrentPlay({\r\n        url:song.url,\r\n        id:song.id,\r\n        name:song.name,\r\n        art:song.art,\r\n        img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n      })\r\n    }\r\n    pushPlayList({\r\n      art:song.art,\r\n      url:song.url,\r\n      id:song.id,\r\n      name:song.name,\r\n      img:'',\r\n    })\r\n  }\r\n  return(\r\n    <ul className=\"song-list\">\r\n      <li className=\"title\">\r\n        <Row>\r\n          <Col span={9} className=\"ellipsis\">歌曲</Col>\r\n          <Col span={5} className=\"ellipsis\">歌手</Col>\r\n          <Col span={8} className=\"ellipsis\">专辑</Col>\r\n          <Col span={2} className=\"ellipsis\">时长</Col>\r\n        </Row>\r\n      </li>\r\n      {\r\n        listData.map((song,index) =>{\r\n          return(\r\n            <li className=\"song\" key={index}>\r\n              <Row>\r\n                <Col span={9} className=\"d-f\">\r\n                  <Icon type=\"heart\" className=\"m-r-5 c-p collect-icon\"/>\r\n                  <div className=\"song-name\">\r\n                    <span className=\"m-r-5 c-p ellipsis\">{song.name}</span>\r\n                  </div>\r\n                  <div className=\"d-f d-b-a operation-icon-box\">\r\n                    <Tooltip title=\"播放\" placement=\"bottom\">\r\n                      <Icon \r\n                        type=\"play-circle\" \r\n                        className=\"operation-icon\"\r\n                        onClick={()=>{playSong(song)}}/>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"添加至播放列表\" placement=\"bottom\">\r\n                      <Icon \r\n                        type=\"plus-circle\" \r\n                        className=\"operation-icon\"\r\n                        onClick={()=>{playSong(song,'noPlay')}}/>\r\n                    </Tooltip>\r\n                  </div>\r\n                </Col>\r\n                <Col span={5}>{song.art}</Col>\r\n                <Col span={8}>{song.album || ''}</Col>\r\n                <Col span={2}>{setFormat(song.duration,'minute')} : {setFormat(song.duration,'second')}</Col>\r\n              </Row>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\nconst setFormat = (number,type) => {\r\n  let res = null\r\n  if (type === 'minute') {\r\n    res = Math.floor((number%3600000)/60000)\r\n  }else{\r\n    res = Math.floor((number%60000)/1000)\r\n  }\r\n  if (res<10) return res = '0' + res\r\n  return res\r\n}\r\nexport default SongList","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport SongList from '../../components/song-list'\r\nconst WySearchResult = (props) => {\r\n  const [songList, setSongList] = useState([]); //歌曲列表数据\r\n  useEffect(()=>{\r\n    let pathState = props.location.state\r\n    axios.get(`/wpi/search?keywords=${pathState.searchVlue}`,{}).then(res=>{\r\n      let data = res.data.result \r\n      if (res.data.code === 200) {\r\n        setSongList(data.songs.map(item=>{\r\n          return {\r\n            name:item.name,\r\n            art:item.artists[0].name,\r\n            album:item.album.name,\r\n            duration:item.duration,\r\n            source:'wy',\r\n            id:item.id\r\n          }\r\n        }))\r\n      }\r\n    })\r\n  },[])\r\n  return(\r\n    <div className=\"song-list\">\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst setFormat = (number,type) => {\r\n  let res = null\r\n  if (type === 'minute') {\r\n    res = Math.floor((number%3600000)/60000)\r\n  }else{\r\n    res = Math.floor((number%60000)/1000)\r\n  }\r\n  if (res<10) return res = '0' + res\r\n  return res\r\n}\r\nconst WySearchResultRouter = withRouter(WySearchResult);\r\nexport default WySearchResultRouter","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SongList from '../../components/song-list'\r\nimport axios from 'axios'\r\nimport '../../common/song-list-style.scss'\r\nconst QQsearchResult = (props) => {\r\n  //歌曲列表数据 这个songlist要求比较严格,因为是要送到子组件去使用的\r\n  const [songList, setSongList] = useState([]); \r\n  useEffect(()=>{\r\n    let pathState = props.location.state\r\n    axios.get(`/qpi/songList?name=${pathState.searchVlue}`)\r\n    .then(res=>{\r\n      setSongList(res.data.data.song.list.map(item=>{\r\n        return {\r\n          name:item.title,\r\n          art:singers(item.singer),\r\n          album:item.album.name || '',\r\n          duration:item.interval * 1000,\r\n          source:'qq',\r\n          id:item.mid\r\n        }\r\n      }))\r\n    })\r\n  },[])\r\n  return(\r\n    <div className=\"song-list\">\r\n      {/* 这里应该是个tabs页,然后点击歌曲就显示歌曲结果,点击歌手就显示搜索歌手的结果*/}\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst singers = (singers)=> {\r\n  let arr = singers.map(item=>{\r\n    return item.name\r\n  })\r\n  return arr.join('/')\r\n}\r\nconst QQsearchResultRouter = withRouter(QQsearchResult);\r\nexport default QQsearchResultRouter","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport SongList from '../../components/song-list'\r\n// 这个页面暂时是糊弄页面,不管你发的啥我都是给的周杰伦的歌\r\nconst SlSearchResult = (props) => {\r\n  const [songList, setSongList] = useState([]); //歌曲列表数据\r\n  useEffect(()=>{\r\n    // let pathState = props.location.state\r\n    axios.get(`/qpi/senlin`)\r\n    .then(res=>{\r\n      setSongList(res.data.songList.map(item=>{\r\n        return {\r\n          name:item.name,\r\n          art:item.art,\r\n          album:'',\r\n          duration:0,\r\n          source:'sl',\r\n          id:item.id,\r\n          url:item.url\r\n        }\r\n      }))\r\n    })\r\n  },[])\r\n  return(\r\n    <div className=\"song-list\">\r\n      {/* 这里应该是个tabs页,然后点击歌曲就显示歌曲结果,点击歌手就显示搜索歌手的结果*/}\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst SlSearchResultRouter = withRouter(SlSearchResult);\r\nexport default SlSearchResultRouter","import React from 'react'\r\n// import {BrowserRouter} from \"react-router-dom\";\r\nimport {Route, Switch} from \"react-router\";\r\nimport DefaultSearchPage from '../../pages/default-search-page'\r\nimport SongMenu from '../../pages/song-menu'\r\nimport WySearchResultRouter from '../../pages/wy-search-result'\r\nimport QQsearchResultRouter from '../../pages/qq-search-result'\r\nimport SlsearchResultRouter from '../../pages/sl-search-result'\r\nconst LayoutMain = ()=> {\r\n  return(\r\n    <div className=\"layout-main-box\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={DefaultSearchPage}/>\r\n        <Route exact path=\"/song-menu\" component={SongMenu}/>\r\n        <Route exact path=\"/wy-search-result\" component={WySearchResultRouter}/>\r\n        <Route exact path=\"/qq-search-result\" component={QQsearchResultRouter}/>\r\n        <Route exact path=\"/sl-search-result\" component={SlsearchResultRouter}/>\r\n        {/* <Route exact path=\"/page2\" component={组件2}/>\r\n        <Route exact path=\"/page1/add\" component={add组件}/> */}\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutMain","import React, { useState } from 'react'\r\nimport { Icon } from 'antd'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { currentPlay, setCurrentPlay, playList, deletePlayList } from '../../rxStore/playRx'\r\nimport './style.scss'\r\n\r\nconst AudioPlay = ()=>{\r\n  let play = useObservable(() => currentPlay.asObservable()) || currentPlay.value\r\n  let pList = useObservable(() => playList.asObservable()) || playList.value\r\n  const [showListBox, setShowListBox] = useState(false)\r\n  const nextPlay = (id)=> { \r\n    //点击下一曲和自动播放完了就执行这个函数,首先判断下当前曲目的位置,然后下一曲或是回到第一首,给setCurrentPlay赋值即可\r\n    //事实上这里还有单曲循环啥的很多操作,暂时简化一点\r\n    playList.value.forEach((item,index)=>{\r\n      if (item.id === id) {\r\n        if (index === playList.value.length-1) {\r\n          setCurrentPlay(pList[0])\r\n        }else{\r\n          setCurrentPlay(pList[index+1])\r\n        }\r\n      }\r\n    })\r\n  }\r\n  const lastPlay = (id) => {\r\n    playList.value.forEach((item,index)=>{\r\n      if (item.id === id) {\r\n        if (index === 0) {\r\n          alert('已经是第一首了,上一首上不动了')\r\n        }else{\r\n          setCurrentPlay(playList.value[index-1])\r\n        }\r\n      } \r\n    })\r\n  }\r\n  const deleteSongListItem = (id,index) => {\r\n    if (playList.value.length===1) {\r\n      setCurrentPlay({\r\n        url:'',\r\n        img:'',\r\n        name:'',\r\n        art:'',\r\n        id:''\r\n      })\r\n    }else{\r\n      nextPlay(id)\r\n    }\r\n    deletePlayList(index)\r\n  }\r\n  const isShowSongList = () => {\r\n    setShowListBox(!showListBox)\r\n  }\r\n  const playListSong = (song) => {\r\n    setCurrentPlay(song)\r\n  }\r\n  return (\r\n    <div className=\"play-footer\">\r\n      {/* 我在这个地方暂时插个东西,就是播放列表,样式上我还没想好,先随便写写 */}\r\n      { showListBox && \r\n        <div className=\"play-list-box\">\r\n          <div className=\"play-list-box-title\">我是头部,播放列表</div>\r\n          <ul>\r\n            { \r\n              pList.map((item,index)=>{\r\n                return(\r\n                  <li key={item.id} className=\"m-b-5\">\r\n                    <span className=\"c-p m-r-5\" onClick={()=>{playListSong(item)}}>{item.name}</span>\r\n                    {\r\n                      item.id === play.id &&\r\n                      <Icon type=\"play-circle\" className=\"m-r-5\"/>\r\n                    }\r\n                    <Icon type=\"delete\" onClick={()=>{deleteSongListItem(item.id,index)}}/>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      }\r\n      <div className=\"play-footer-main d-f-b\">\r\n        <div className=\"song-content d-f\">\r\n          <div className=\"img-box\">\r\n            <img src=\"//y.gtimg.cn/music/photo_new/T001R150x150M0000025NhlN2yWrP4.jpg?max_age=2592000\"/> \r\n          </div>\r\n          <div className=\"song-info\">\r\n            <p className=\"info\">\r\n              <span className=\"name\">{play.name}</span>\r\n              <span> - </span>\r\n              <span>{play.art}</span>\r\n            </p>\r\n            <div className=\"song-icon d-f-b\">\r\n              <Icon type=\"heart\" />\r\n              <Icon type=\"align-left\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"play-operate d-f\">\r\n          <audio \r\n            className=\"m-r-10\"\r\n            controls=\"controls\"\r\n            autoPlay=\"autoPlay\"\r\n            onEnded={()=>{nextPlay(play.id)}}\r\n            src={play.url}/>\r\n          <div className=\"small-icon m-r-10\">\r\n            <Icon type=\"fast-backward\" onClick={()=>{lastPlay(play.id)}}/>\r\n          </div>\r\n          <div className=\"small-icon\">\r\n            <Icon type=\"fast-forward\" onClick={()=>{nextPlay(play.id)}}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"d-f inventory c-p\" onClick={()=>{isShowSongList()}}>\r\n            <span>列表</span>\r\n            <Icon type=\"menu-unfold\" className=\"menu-unfold\"/>\r\n            <span>{pList.length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AudioPlay","/**\r\n * 作为layout入口文件,整合了三个内容,分别是\r\n * 左侧的list菜单.\r\n * 右侧的内容,路由子页面,\r\n * 下面的播放界面\r\n * \r\n * 其中点击左侧联动右侧,点击右侧里面的播放部分联动底部.点击底部什么都不联动\r\n */\r\nimport React from 'react'\r\nimport Aside from './aside'\r\nimport LayoutMain from './main'\r\nimport AudioPlay from '../components/audio-play'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport './style.scss'\r\n\r\nconst Layout = () => {\r\n  return(\r\n    <Router>\r\n      <section className=\"layout-box\">\r\n        <Aside></Aside>\r\n        <LayoutMain></LayoutMain>\r\n      </section>\r\n      <section className=\"layout-footer\">\r\n        <AudioPlay />\r\n      </section>\r\n    </Router>\r\n  )\r\n}\r\nexport default Layout\r\n","/**\r\n * 因为思前想后,还是模仿的QQ音乐的客户端的UI/交互/布局\r\n * 作为入口,需要有 layout 管理大体的显示内容\r\n * 如果有其他的路由内容,再添加\r\n */\r\nimport React from 'react';\r\nimport LayoutBox from './layout'\r\nimport './style/reset-style.css'\r\nimport './style/public-use.css'\r\nimport './style/and-style.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <LayoutBox></LayoutBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}