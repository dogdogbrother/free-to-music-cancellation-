{"version":3,"sources":["rxStore/user.js","layout/aside/index.js","pages/default-search-page/index.js","pages/song-menu/index.js","api/index.js","rxStore/playRx.js","components/song-list/index.js","pages/wy-search-result/index.js","pages/qq-search-result/index.js","pages/sl-search-result/index.js","pages/upload-song/index.js","pages/my-like/index.js","layout/main/index.js","components/login/index.js","components/audio-play/index.js","layout/index.js","App.js","serviceWorker.js","index.js"],"names":["loginStatus","BehaviorSubject","status","setLoginStatus","value","next","userInfo","accountName","gender","fonds","name","_id","updateUserInfo","obj","Aside","cUserInfo","useObservable","asObservable","className","onClick","children","match","location","pathname","to","type","length","Title","Typography","Paragraph","Text","Presentation","level","strong","mark","underline","QqExplain","WyExplain","SlExplain","DefaultSearchPage","Search","Input","useState","platform","setPlatform","SearchButton","withRouter","history","placeholder","enterButton","size","onSearch","searchVlue","push","state","handlerSearch","style","width","Group","defaultValue","buttonStyle","onChange","evnt","target","Button","SongMenu","http","url","method","parm","loding","Promise","resolve","reject","hide","message","loading","document","cookie","token","split","axios","defaults","headers","common","data","then","res","catch","error","msg","currentPlay","img","art","id","setCurrentPlay","play","playList","pushPlayList","list","setFormat","number","Math","floor","SongList","listData","playSong","song","action","isExist","find","item","source","getQqUrl","getSlUrl","getWyUrl","get","req_0","midurlinfo","purl","like","addUserFonds","dislike","songArr","updateUserFonds","span","map","index","key","theme","title","placement","album","duration","WySearchResultRouter","props","songList","setSongList","useEffect","pathState","result","code","songs","artists","singers","join","QQsearchResultRouter","singer","interval","mid","SlSearchResultRouter","WrappedUpdate","Form","create","imageUrl","setImageUrl","setLoading","songPath","setSongPath","updateProps","Authorization","accept","info","file","console","log","fileList","response","getFieldDecorator","form","uploadButton","onSubmit","e","preventDefault","validateFields","err","values","success","Item","listType","showUploadList","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","src","alt","rules","required","prefix","color","htmlType","MyLike","LayoutMain","exact","path","component","SlsearchResultRouter","UploadSong","WrappedLogin","isLogin","setIsLogin","handleSubmit","password","affirmPassword","AudioPlay","pList","showListBox","setShowListBox","nextPlay","forEach","deleteSongListItem","splice","deletePlayList","controls","autoPlay","onEnded","alert","Layout","currentLoginStatus","App","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.580549ee.chunk.js","sourcesContent":["import { BehaviorSubject } from \"rxjs\"\r\n\r\n// 这个的目的是控制登陆注册的弹窗的显示与否\r\nexport const loginStatus = new BehaviorSubject({\r\n  status: false\r\n})\r\n\r\nexport const setLoginStatus = (value) => {\r\n  loginStatus.next({\r\n    status: value\r\n  })\r\n}\r\n// 这个就是全局的用户信息，例如有头像，性别，名字啥的\r\nexport const userInfo = new BehaviorSubject({\r\n  loginStatus: false, //默认是未登录状态\r\n  accountName:'',\r\n  gender:'',\r\n  fonds:[],\r\n  name:'',\r\n  _id:''\r\n})\r\n\r\n// 单纯的更新个人信息资料\r\nexport const updateUserInfo = (obj) => {\r\n  let value = userInfo.value\r\n  userInfo.next({\r\n    ...value,\r\n    ...obj\r\n  })\r\n}\r\n\r\n//就是添加我的喜欢的歌曲\r\nexport const addUserFonds = (obj) => {\r\n  let value = userInfo.value\r\n  if(!value.fonds.find(item=>item.id===obj.id)){\r\n    value.fonds.push(obj)\r\n    userInfo.next({\r\n      ...value,\r\n    })\r\n  }\r\n}\r\n\r\n//这个其实是delete，但是操作的方式是全部替换，所以叫做 update\r\nexport const updateUserFonds = (songArr) => {\r\n  let value = userInfo.value\r\n  value.fonds = songArr\r\n  userInfo.next({\r\n    ...value,\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { Icon } from 'antd';\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { setLoginStatus, userInfo } from '../../rxStore/user'\r\n\r\nimport './style.scss'\r\n\r\nconst Aside = ()=> {\r\n  // const [state, setState] = useState(false)\r\n  let cUserInfo = useObservable(() => userInfo.asObservable()) || userInfo\r\n  const loginOpration = () => {\r\n    setLoginStatus({ status: true })\r\n  }\r\n  return(\r\n    <div className=\"layout-aside-box p-20\">\r\n      <h1 className=\"logo-module\">\r\n      {\r\n        cUserInfo.loginStatus ?\r\n          <div className=\"use-info-box\">\r\n            <span>我是{cUserInfo.name}用户</span>\r\n          </div>\r\n        :\r\n          <span className=\"c-p\" onClick={ () => { loginOpration() } }>请登录</span>\r\n      }\r\n      </h1>\r\n        <div>\r\n          <p className=\"menu-title\">在线音乐</p>\r\n          <ul>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/' ? 'aside-active' : ''}>\r\n                  <Link to=\"/\">\r\n                    <Icon type=\"search\"/><span>搜索歌曲</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/song-menu' ? 'aside-active' : ''}>\r\n                  <Link to=\"/song-menu\">\r\n                    <Icon type=\"customer-service\"/><span>查看歌单</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n          </ul>\r\n        </div>\r\n          <div>\r\n            <p className=\"menu-title\">我的音乐</p>\r\n            <ul>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/wy-like' ? 'aside-active' : ''}>\r\n                  <Link to=\"/my-like\">\r\n                    <Icon type=\"heart\"/><span>我的喜欢 ({ cUserInfo.fonds ? cUserInfo.fonds.length : ''})</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n              {/* <li>\r\n                <Icon type=\"heart\"/>\r\n                <span>我的喜欢 ({ cUserInfo.fonds ? cUserInfo.fonds.length : ''})</span>\r\n              </li> */}\r\n              <li>\r\n                <Icon type=\"desktop\" />\r\n                <span>本地和下载</span>  \r\n              </li>\r\n              <Route\r\n                children={(match)=>(\r\n                  <li className={match.location.pathname === '/upload-song' ? 'aside-active' : ''}>\r\n                    <Link to=\"/upload-song\">\r\n                      <Icon type=\"upload\"/><span>上传歌曲</span>\r\n                    </Link>\r\n                  </li>\r\n                )}>\r\n              </Route>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n          <p className=\"menu-title\">音乐台介绍</p>\r\n          <ul>\r\n            <li>\r\n              <Icon type=\"exception\"/>\r\n              <span>功能介绍</span>\r\n            </li>\r\n            <li>\r\n              <Icon type=\"pushpin\" />\r\n              <span>我要提意见</span>  \r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Aside","/**\r\n  hooks的值有\r\n    1. platform,0为QQ音乐/1为网易云音乐/2为林悦台\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Typography, Input, Radio  } from 'antd';\r\nimport './style.scss'\r\nimport { withRouter } from \"react-router-dom\";\r\nconst { Title, Paragraph, Text } = Typography\r\nconst DefaultSearchPage = ()=> {\r\n  const { Search } = Input;\r\n  const [platform, setPlatform] = useState(0);\r\n  /**\r\n   * \r\n   */\r\n  const handlerSearch = (searchVlue,history)=> {  \r\n    //点击搜索按钮时执行此函数,给新路由带上搜索的 search 值和 platform 值\r\n    if (platform === 0) {\r\n      history.push({ pathname:'qq-search-result', state:{ searchVlue, platform }})\r\n    }else if(platform === 1){\r\n      history.push({ pathname:'wy-search-result', state:{ searchVlue, platform }})\r\n    }else{\r\n      history.push({ pathname:'sl-search-result', state:{ searchVlue, platform }})\r\n    }\r\n    \r\n  }\r\n  const SearchButton = withRouter(({history})=>{\r\n    return (\r\n      <Search\r\n        placeholder=\"暂时只支持搜索歌曲名称\"\r\n        enterButton=\"搜索\"\r\n        size=\"large\"\r\n        onSearch={value => { handlerSearch(value,history) }}\r\n        style={{ width: 280 }}\r\n      />\r\n    )\r\n  })\r\n  return(\r\n    <div className=\"default-search-page\">\r\n      <Presentation/>\r\n      <div className=\"search-box\">\r\n        <div className=\"m-b-20\">\r\n          <SearchButton/>\r\n        </div>\r\n        <div className=\"m-b-20\">\r\n          <Radio.Group defaultValue={platform} buttonStyle=\"solid\" onChange={(evnt)=>{setPlatform(evnt.target.value)}}>\r\n            <Radio.Button value={0}>QQ音乐</Radio.Button>\r\n            <Radio.Button value={1}>网易云音乐</Radio.Button>\r\n            <Radio.Button value={2}>林悦台</Radio.Button>\r\n          </Radio.Group>\r\n        </div>\r\n        <div>\r\n          { platform === 0 && <QqExplain/> }\r\n          { platform === 1 && <WyExplain/> }\r\n          { platform === 2 && <SlExplain/> }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * 搜索页面的介绍组件\r\n */\r\nconst Presentation = ()=> {\r\n  return(\r\n    <div className=\"presentation\">\r\n      <div>\r\n        <Title level={2}>搜索功能介绍</Title>\r\n        <Paragraph>\r\n          你可以通过选择下面的按钮来控制你搜索的结果来源是<Text strong> 网易云音乐 </Text>还是<Text strong> QQ音乐 </Text>.\r\n          如果因为 <Text mark>版权</Text> 或是 <Text mark>封禁原因</Text> 而搜索不到歌曲或是播放不成功时,可以选择 <Text strong> 林悦台 </Text>试一试.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          <Text strong> 林悦台 </Text>是我个人的服务器,里面上传了一些百度云下载的音乐,目前已上传的有 <Text underline>周杰伦</Text> 的大部分歌曲, <Text underline>李志</Text> 的全部歌曲.\r\n          如果后续有时间也同样能力的话,我会写一个上传接口,提供用户自定义上传歌曲.\r\n        </Paragraph>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n *搜索页面的搜索功能组件\r\n */\r\nconst QqExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>QQ音乐的说明</Title>\r\n      <Paragraph>\r\n        你有可能会<Text strong> 播放失败 </Text>是因为有些曲目因为版权问题无法找到资源,暂时这样,后面我再想办法优化.如果你发现播放失败,请在播放列表中删除它吧\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\nconst WyExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>网易云音乐的说明</Title>\r\n      <Paragraph>\r\n        相比较恶心的QQ音乐,网易云的接口就很友好了,github上有nodeJS版本的API,绝大功能都有,如果你需要网易云音乐的一些功能,请<Text strong> 私聊我 </Text>或是在<Text strong> 我要提意见 </Text>里面提出\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\nconst SlExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>林悦台的说明</Title>\r\n      <Paragraph>\r\n        目前功能是残疾功能,<Text strong> 搜索是假的 </Text>,暂时只提供几首我手写地址的歌,其中周杰伦的歌是非常超清的,30MB左右,会导致播放准备时间比较长,请耐心等待下.\r\n        后续我会补上数据库,和开放上传接口.\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DefaultSearchPage","import React from 'react'\r\n\r\n\r\nconst SongMenu = ()=> {\r\n  return(\r\n    <div className=\"defaule-page\">歌单页面</div>\r\n  )\r\n}\r\n\r\nexport default SongMenu","import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nclass Http {\r\n  http({ url, method=\"get\", parm={}, loding=\"\" }) {\r\n    return new Promise((resolve, reject) => {\r\n      const hide = message.loading(loding, 0);\r\n      if (document.cookie) {\r\n        // 这个地方拿到cokie中的token值,再赋值到 Authorization 头中\r\n        let token = document.cookie.split('oken=')[1]\r\n        axios.defaults.headers.common[\"Authorization\"] = 'Bearer ' + token;\r\n      }\r\n      axios({\r\n        method,\r\n        url,\r\n        data:parm,\r\n        'responseType': 'json'\r\n      }).then(res => {\r\n        hide()\r\n        resolve(res.data)\r\n      }).catch( error => {\r\n        hide()\r\n        reject({\r\n          msg: error\r\n        })\r\n      })\r\n    })\r\n  }\r\n}\r\nlet http = new Http()\r\nexport default http.http","import { BehaviorSubject } from \"rxjs\"\r\n\r\nexport const currentPlay = new BehaviorSubject({\r\n  url:'',\r\n  img:'',\r\n  name:'',\r\n  art:'', //歌手\r\n  id:'',\r\n})\r\n\r\nexport const setCurrentPlay = (obj)=>{ \r\n  let play = currentPlay.value\r\n  currentPlay.next({\r\n    ...play,\r\n    ...obj\r\n  })\r\n}\r\n\r\n//播放列表是个数组,里面存的是对象,对应的就是当前播放的格式\r\nexport const playList = new BehaviorSubject([])\r\n\r\nexport const pushPlayList = (obj)=>{\r\n  //其实push进来应该有别的操作,例如检查这个歌曲是否已经在列表中了,没有的话再添加\r\n  let list = playList.value\r\n  playList.next([...list,obj])\r\n}\r\n\r\nexport const deletePlayList = (index)=>{\r\n  playList.value.splice(index,1)\r\n  playList.next([...playList.value])\r\n}\r\n\r\n","/**\r\n *  listDta 是数据格式定义好了的数组内容,要求有如下\r\n *  {\r\n *    name:string,      歌曲名字\r\n *    art:string,       作家名字\r\n *    album:tring       专辑名称\r\n *    duration:number   时长,这个组件内处理\r\n *    source:qq or wy   来自于哪个资源\r\n *    id:number         歌曲的id,用于搜索的唯一键\r\n *  }\r\n * \r\n *  点击播放的话,先判断是qq还是网易,网易的比较好办,有现成的接口,qq的有加密有点麻烦,虽然多处理处理\r\n */\r\n\r\nimport React from 'react'\r\nimport { Row, Col, Icon, Tooltip } from 'antd'\r\nimport axios from 'axios'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport http from '../../api'\r\nimport { setCurrentPlay, playList, pushPlayList } from '../../rxStore/playRx'\r\nimport { userInfo, addUserFonds, updateUserFonds } from '../../rxStore/user'\r\nimport './style.scss'\r\n\r\nconst SongList = ({listData})=>{\r\n  let cUserInfo = useObservable(() => userInfo.asObservable()) || userInfo\r\n  const playSong = (song,action) => {\r\n    //在申请网络接口前,我们要先判断下播放列表中是否有了这首歌,有的话就播放这个首歌,不要请求接口\r\n    const isExist = playList.value.find(item=>item.id===song.id)\r\n    if (isExist) return setCurrentPlay(isExist)\r\n    if (song.source === 'qq') return getQqUrl(song,action)\r\n    if (song.source === 'sl') return getSlUrl(song,action)\r\n    getWyUrl(song,action)\r\n  }\r\n  const getQqUrl = (song,action) => {\r\n    // qq音乐的实在是麻烦了,先用mid(id)申请个接口,接口里面有一个purl,拿到这个再拼接一下才能拿到真正播放地址\r\n    axios.get(`/qpi/songUrl?id=${song.id}`).then(res=>{\r\n      let url = 'http://122.226.161.25/amobile.music.tc.qq.com/'+res.data.req_0.data.midurlinfo[0].purl\r\n      //拿到了播放地址,要做两个操作.一个是切换当前播放歌曲,二是push进播放列表 \r\n      if (!action) {     \r\n        setCurrentPlay({\r\n          url,\r\n          id:song.id,\r\n          name:song.name,\r\n          art:song.art,\r\n          img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n        })\r\n      }\r\n      pushPlayList({\r\n        art:song.art,\r\n        url,\r\n        id:song.id,\r\n        name:song.name,\r\n        img:'',\r\n      })\r\n    })\r\n  }\r\n  const getWyUrl = (song,action) => {\r\n    axios.get(`/wpi/song/url?id=${song.id}`).then(res=>{\r\n      if (!action) {\r\n        setCurrentPlay({\r\n          url:res.data.data[0].url,\r\n          id:song.id,\r\n          name:song.name,\r\n          art:song.art,\r\n          img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n        })\r\n      }\r\n      pushPlayList({\r\n        art:song.art,\r\n        url:res.data.data[0].url,\r\n        id:song.id,\r\n        name:song.name,\r\n        img:'',\r\n      })\r\n    })\r\n  }\r\n  const getSlUrl = (song,action) => {\r\n    if (!action) {\r\n      setCurrentPlay({\r\n        url:song.url,\r\n        id:song.id,\r\n        name:song.name,\r\n        art:song.art,\r\n        img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n      })\r\n    }\r\n    pushPlayList({\r\n      art:song.art,\r\n      url:song.url,\r\n      id:song.id,\r\n      name:song.name,\r\n      img:'',\r\n    })\r\n  }\r\n  //这个函数是说，点击喜欢，即刻点亮红心，发送请求，其实就是把id，url什么的song信息给存到后端的个人信息的数组里面去\r\n  const like = (item)=>{\r\n    http({\r\n      url:'/spi/user/likesong',\r\n      method:'post',\r\n      parm:item,\r\n      loding:'正在喜欢中...'\r\n    }).then(res=>{\r\n      //更新全局的info信息\r\n      addUserFonds(res)\r\n    })\r\n  }\r\n  //已经点了喜欢的歌曲，再点击就是不喜欢了\r\n  const dislike = (item) => {\r\n    http({\r\n      url:'/spi/user/dislikesong',\r\n      method:'post',\r\n      parm:item,\r\n      loding:'正在不喜欢...'\r\n    }).then(res=>{\r\n      //更新全局的info.fonds信息\r\n      updateUserFonds(res)\r\n    })\r\n  }\r\n  return(\r\n    <ul className=\"song-list\">\r\n      <li className=\"title\">\r\n        <Row>\r\n          <Col span={9} className=\"ellipsis\">歌曲</Col>\r\n          <Col span={5} className=\"ellipsis\">歌手</Col>\r\n          <Col span={8} className=\"ellipsis\">专辑</Col>\r\n          <Col span={2} className=\"ellipsis\">时长</Col>\r\n        </Row>\r\n      </li>\r\n      {\r\n        listData.map((song,index) =>{\r\n          return(\r\n            <li className=\"song\" key={index}>\r\n              <Row>\r\n                <Col span={9} className=\"d-f\">\r\n                  {\r\n                    cUserInfo.fonds.find(item=>item.id===song.id) ?\r\n                    <div><Icon type=\"heart\" theme=\"filled\" className=\"m-r-5 c-p\" onClick={ ()=>{ dislike(song, true) } }/></div> :\r\n                    <Icon type=\"heart\" className=\"m-r-5 c-p collect-icon\" onClick={ ()=>{ like(song, true) } }/>\r\n                  }\r\n                  <div className=\"song-name\">\r\n                    <span className=\"m-r-5 c-p ellipsis\">{song.name}</span>\r\n                  </div>\r\n                  <div className=\"d-f d-b-a operation-icon-box\">\r\n                    <Tooltip title=\"播放\" placement=\"bottom\">\r\n                      <Icon \r\n                        type=\"play-circle\" \r\n                        className=\"operation-icon\"\r\n                        onClick={()=>{playSong(song)}}/>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"添加至播放列表\" placement=\"bottom\">\r\n                      <Icon \r\n                        type=\"plus-circle\" \r\n                        className=\"operation-icon\"\r\n                        onClick={()=>{playSong(song,'noPlay')}}/>\r\n                    </Tooltip>\r\n                  </div>\r\n                </Col>\r\n                <Col span={5}>{song.art}</Col>\r\n                <Col span={8}>{song.album || ''}</Col>\r\n                <Col span={2}>{setFormat(song.duration,'minute')} : {setFormat(song.duration,'second')}</Col>\r\n              </Row>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\nconst setFormat = (number,type) => {\r\n  let res = null\r\n  if (type === 'minute') {\r\n    res = Math.floor((number%3600000)/60000)\r\n  }else{\r\n    res = Math.floor((number%60000)/1000)\r\n  }\r\n  if (res<10) return res = '0' + res\r\n  return res\r\n}\r\nexport default SongList","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport SongList from '../../components/song-list'\r\nconst WySearchResult = (props) => {\r\n  const [songList, setSongList] = useState([]); //歌曲列表数据\r\n  useEffect(()=>{\r\n    let pathState = props.location.state\r\n    axios.get(`/wpi/search?keywords=${pathState.searchVlue}`,{}).then(res=>{\r\n      let data = res.data.result \r\n      if (res.data.code === 200) {\r\n        setSongList(data.songs.map(item=>{\r\n          return {\r\n            name:item.name,\r\n            art:item.artists[0].name,\r\n            album:item.album.name,\r\n            duration:item.duration,\r\n            source:'wy',\r\n            id:item.id\r\n          }\r\n        }))\r\n      }\r\n    })\r\n  },[props.location.state])\r\n  return(\r\n    <div className=\"song-list\">\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst WySearchResultRouter = withRouter(WySearchResult);\r\nexport default WySearchResultRouter","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SongList from '../../components/song-list'\r\nimport axios from 'axios'\r\nimport '../../common/song-list-style.scss'\r\nconst QQsearchResult = (props) => {\r\n  //歌曲列表数据 这个songlist要求比较严格,因为是要送到子组件去使用的\r\n  const [songList, setSongList] = useState([]); \r\n  useEffect(()=>{\r\n    let pathState = props.location.state\r\n    axios.get(`/qpi/songList?name=${pathState.searchVlue}`)\r\n    .then(res=>{\r\n      setSongList(res.data.data.song.list.map(item=>{\r\n        return {\r\n          name:item.title,\r\n          art:singers(item.singer),\r\n          album:item.album.name || '',\r\n          duration:item.interval * 1000,\r\n          source:'qq',\r\n          id:item.mid\r\n        }\r\n      }))\r\n    })\r\n  },[props.location.state])\r\n  return(\r\n    <div className=\"song-list\">\r\n      {/* 这里应该是个tabs页,然后点击歌曲就显示歌曲结果,点击歌手就显示搜索歌手的结果*/}\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst singers = (singers)=> {\r\n  let arr = singers.map(item=>{\r\n    return item.name\r\n  })\r\n  return arr.join('/')\r\n}\r\nconst QQsearchResultRouter = withRouter(QQsearchResult);\r\nexport default QQsearchResultRouter","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport SongList from '../../components/song-list'\r\n// 这个页面暂时是糊弄页面,不管你发的啥我都是给的周杰伦的歌\r\nconst SlSearchResult = (props) => {\r\n  const [songList, setSongList] = useState([]); //歌曲列表数据\r\n  useEffect(()=>{\r\n    // let pathState = props.location.state\r\n    axios.get(`/spi/music/songlist`)\r\n    .then(res=>{\r\n      setSongList(res.data.songList.map(item=>{\r\n        return {\r\n          name:item.name,\r\n          art:item.art,\r\n          album:'',\r\n          duration:0,\r\n          source:'sl',\r\n          id:item.id,\r\n          url:item.url\r\n        }\r\n      }))\r\n    })\r\n  },[])\r\n  return(\r\n    <div className=\"song-list\">\r\n      {/* 这里应该是个tabs页,然后点击歌曲就显示歌曲结果,点击歌手就显示搜索歌手的结果*/}\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst SlSearchResultRouter = withRouter(SlSearchResult);\r\nexport default SlSearchResultRouter","import React, { useState } from 'react'\r\nimport { Upload, message, Button, Icon, Form, Input } from 'antd';\r\n\r\nimport http from '../../api'\r\nimport './style.scss'\r\n\r\nconst UpdataSong = (props)=> {\r\n\r\n  const [ imageUrl, setImageUrl ] = useState(null);\r\n  const [ loading, setLoading ] = useState(false);\r\n  const [ songPath, setSongPath ] = useState(null);\r\n\r\n  const updateProps = {\r\n    name: 'file',\r\n    action: 'spi/music/updatesong',\r\n    headers: {\r\n      Authorization: 'Bearer ' + document.cookie.split('oken=')[1]\r\n    },\r\n    accept:'.mp3,.flac,.wma',\r\n    onChange(info) {\r\n      if (info.file.status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (info.file.status === 'done') {\r\n        setSongPath(info.file.response.data)\r\n      } else if (info.file.status === 'error') {\r\n        setSongPath(null)\r\n      }\r\n    },\r\n  };\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n  \r\n  const handleChange = info => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl =>{\r\n        setImageUrl(imageUrl)\r\n        setLoading(true);\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = e =>{\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (!songPath) return message.error(`请先上传歌曲!`);\r\n        http({\r\n          method:'post',\r\n          url:'/spi/music/updatemusic',\r\n          parm:{ ...values, songPath},\r\n          loding:'上传中'\r\n        }).then(res=>{\r\n          message.success('上传成功');\r\n        }).catch( error => {\r\n          message.error('上传失败')\r\n        })\r\n      }\r\n    })\r\n  }\r\n  const { getFieldDecorator } = props.form\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <Icon type={loading ? 'loading' : 'plus'} />\r\n      <div className=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  )\r\n\r\n  return(\r\n    <div className=\"update-page\">\r\n      \r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Item>\r\n          <Upload {...updateProps}>\r\n            <Button>\r\n              <Icon type=\"upload\" />上传歌曲\r\n            </Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Upload\r\n            name=\"avatar\"\r\n            listType=\"picture-card\"\r\n            className=\"avatar-uploader\"\r\n            showUploadList={false}\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            onChange={handleChange}\r\n          >\r\n            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('songName', {\r\n            rules: [{ required: true, message: '歌曲不能为空' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"customer-service\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"歌曲名称\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('author', {\r\n            rules: [{ required: true, message: '歌手不能为空' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"歌手\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('describe')(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"歌曲描述\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">登录</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\n\r\nconst WrappedUpdate = Form.create({ name: 'update_song' })(UpdataSong);\r\n\r\nexport default WrappedUpdate\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let client = new OSS({\r\n      //   region: 'oss-cn-hangzhou',\r\n      //   accessKeyId: 'LTAI4FovhkFEKifXapYhrJGf',\r\n      //   accessKeySecret: '0WZwmxQ86rW3O42gb9CSoguBYY0jN6',\r\n      //   // bucket: 'public-read-write',\r\n      //   bucket:'music-song'\r\n      // })\r\n      \r\n      \r\n    //   // client().multipartUpload('测试上传一个mp4',reader.result)","import React from 'react'\r\nimport SongList from '../../components/song-list'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { userInfo } from '../../rxStore/user'\r\n\r\nconst MyLike = ()=> {\r\n  let cUserInfo = useObservable(() => userInfo.asObservable()) || userInfo\r\n  return(\r\n    <div className=\"song-list\">\r\n      <div className=\"res-container\">\r\n        <SongList listData={cUserInfo.fonds ? cUserInfo.fonds : []}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyLike","import React from 'react'\r\n// import {BrowserRouter} from \"react-router-dom\";\r\nimport {Route, Switch} from \"react-router\";\r\nimport DefaultSearchPage from '../../pages/default-search-page'\r\nimport SongMenu from '../../pages/song-menu'\r\nimport WySearchResultRouter from '../../pages/wy-search-result'\r\nimport QQsearchResultRouter from '../../pages/qq-search-result'\r\nimport SlsearchResultRouter from '../../pages/sl-search-result'\r\nimport UploadSong from '../../pages/upload-song'\r\nimport MyLike from '../../pages/my-like'\r\nconst LayoutMain = ()=> {\r\n  return(\r\n    <div className=\"layout-main-box\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={DefaultSearchPage}/>\r\n        <Route exact path=\"/song-menu\" component={SongMenu}/>\r\n        <Route exact path=\"/wy-search-result\" component={WySearchResultRouter}/>\r\n        <Route exact path=\"/qq-search-result\" component={QQsearchResultRouter}/>\r\n        <Route exact path=\"/sl-search-result\" component={SlsearchResultRouter}/>\r\n        <Route exact path=\"/upload-song\" component={UploadSong}/>\r\n        <Route exact path=\"/my-like\" component={MyLike}/>\r\n        {/* <Route exact path=\"/page2\" component={组件2}/>\r\n        <Route exact path=\"/page1/add\" component={add组件}/> */}\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutMain","import React, { useState } from 'react'\r\nimport { Form, Icon, Input, Button, message } from 'antd'\r\nimport http from '../../api'\r\nimport { setLoginStatus, updateUserInfo } from '../../rxStore/user'\r\n\r\nimport './style.scss'\r\n\r\nconst Login = (props)=> {\r\n  const [ isLogin, setIsLogin ] = useState(true);\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (isLogin) {  //假如 isLogin 是true,就代表是登陆,否则就是注册\r\n          http({\r\n            method:'post',\r\n            url:'/spi/login',\r\n            parm:values,\r\n            loding:'登陆中'\r\n          }).then(res=>{\r\n            message.success('登陆成功');\r\n            setLoginStatus(false)\r\n            updateUserInfo({ ...res, loginStatus: true })\r\n          }).catch( error => {\r\n            message.error('账号密码错误')\r\n          })\r\n        }else{\r\n          if (values.password !== values.affirmPassword) {\r\n            return message.error('密码不一致,请检查')\r\n          }\r\n          http({\r\n            method:'post',\r\n            url:'/spi/register',\r\n            parm:values\r\n          }).then(res=>{\r\n            message.success('注册成功,请登录')\r\n            values.name = ''\r\n            values.password = ''\r\n            values.affirmPassword = ''\r\n            setIsLogin(true)\r\n          }).catch(err=>{\r\n            message.error('注册失败')\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  const { getFieldDecorator } = props.form\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"box\">\r\n        <div className=\"wrapper-header d-f-b\">\r\n          <span>{ isLogin ? '登录' : '注册'}</span>\r\n          <Icon type=\"close\" className=\"icon c-p\" onClick={ () => { setLoginStatus(false) } }/>\r\n        </div>\r\n        {\r\n          isLogin ?\r\n          <div className=\"login\">\r\n            <Form onSubmit={handleSubmit} className=\"login-form\">\r\n              <Form.Item>\r\n                {getFieldDecorator('name', {\r\n                  rules: [{ required: true, message: '用户名不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"name\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator('password', {\r\n                  rules: [{ required: true, message: '密码不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">登录</Button>\r\n              </Form.Item>\r\n            </Form>\r\n            <div className=\"d-f opreation\">\r\n                <span className=\"m-r-20 c-p\" onClick={()=>{setIsLogin(false)}}>注册</span>\r\n                <span className=\"c-p\">忘记密码</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          <div className=\"register\">\r\n            <Form onSubmit={handleSubmit} className=\"login-form\">\r\n              <Form.Item>\r\n                {getFieldDecorator('name', {\r\n                  rules: [{ required: true, message: '用户名不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator('password', {\r\n                  rules: [{ required: true, message: '密码不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"密码\"\r\n                    type=\"password\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator('affirmPassword', {\r\n                  rules: [{ required: true, message: '确认密码不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"请确认密码\"\r\n                    type=\"password\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">注册</Button>\r\n              </Form.Item>\r\n            </Form>\r\n            <div className=\"d-f opreation\">\r\n                <span className=\"m-r-20 c-p\" onClick={()=>{setIsLogin(true)}}>已有账户去登录</span>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst WrappedLogin = Form.create({ name: 'normal_login' })(Login);\r\nexport default WrappedLogin","import React, { useState } from 'react'\r\nimport { Icon } from 'antd'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { currentPlay, setCurrentPlay, playList, deletePlayList } from '../../rxStore/playRx'\r\nimport './style.scss'\r\n\r\nconst AudioPlay = ()=>{\r\n  let play = useObservable(() => currentPlay.asObservable()) || currentPlay.value\r\n  let pList = useObservable(() => playList.asObservable()) || playList.value\r\n  const [showListBox, setShowListBox] = useState(false)\r\n  const nextPlay = (id)=> { \r\n    //点击下一曲和自动播放完了就执行这个函数,首先判断下当前曲目的位置,然后下一曲或是回到第一首,给setCurrentPlay赋值即可\r\n    //事实上这里还有单曲循环啥的很多操作,暂时简化一点\r\n    playList.value.forEach((item,index)=>{\r\n      if (item.id === id) {\r\n        if (index === playList.value.length-1) {\r\n          setCurrentPlay(pList[0])\r\n        }else{\r\n          setCurrentPlay(pList[index+1])\r\n        }\r\n      }\r\n    })\r\n  }\r\n  const lastPlay = (id) => {\r\n    playList.value.forEach((item,index)=>{\r\n      if (item.id === id) {\r\n        if (index === 0) {\r\n          alert('已经是第一首了,上一首上不动了')\r\n        }else{\r\n          setCurrentPlay(playList.value[index-1])\r\n        }\r\n      } \r\n    })\r\n  }\r\n  const deleteSongListItem = (id,index) => {\r\n    if (playList.value.length===1) {\r\n      setCurrentPlay({\r\n        url:'',\r\n        img:'',\r\n        name:'',\r\n        art:'',\r\n        id:''\r\n      })\r\n    }else{\r\n      nextPlay(id)\r\n    }\r\n    deletePlayList(index)\r\n  }\r\n  const isShowSongList = () => {\r\n    setShowListBox(!showListBox)\r\n  }\r\n  const playListSong = (song) => {\r\n    setCurrentPlay(song)\r\n  }\r\n  return (\r\n    <div className=\"play-footer\">\r\n      {/* 我在这个地方暂时插个东西,就是播放列表,样式上我还没想好,先随便写写 */}\r\n      { showListBox && \r\n        <div className=\"play-list-box\">\r\n          <div className=\"play-list-box-title\">我是头部,播放列表</div>\r\n          <ul>\r\n            { \r\n              pList.map((item,index)=>{\r\n                return(\r\n                  <li key={item.id} className=\"m-b-5\">\r\n                    <span className=\"c-p m-r-5\" onClick={()=>{playListSong(item)}}>{item.name}</span>\r\n                    {\r\n                      item.id === play.id &&\r\n                      <Icon type=\"play-circle\" className=\"m-r-5\"/>\r\n                    }\r\n                    <Icon type=\"delete\" onClick={()=>{deleteSongListItem(item.id,index)}}/>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      }\r\n      <div className=\"play-footer-main d-f-b\">\r\n        <div className=\"song-content d-f\">\r\n          <div className=\"img-box\">\r\n            <img src=\"//y.gtimg.cn/music/photo_new/T001R150x150M0000025NhlN2yWrP4.jpg?max_age=2592000\" alt=\"歌手头像\"/> \r\n          </div>\r\n          <div className=\"song-info\">\r\n            <p className=\"info\">\r\n              <span className=\"name\">{play.name}</span>\r\n              <span> - </span>\r\n              <span>{play.art}</span>\r\n            </p>\r\n            <div className=\"song-icon d-f-b\">\r\n              <Icon type=\"heart\" />\r\n              <Icon type=\"align-left\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"play-operate d-f\">\r\n          <audio \r\n            className=\"m-r-10\"\r\n            controls=\"controls\"\r\n            autoPlay=\"autoPlay\"\r\n            onEnded={()=>{nextPlay(play.id)}}\r\n            src={play.url}/>\r\n          <div className=\"small-icon m-r-10\">\r\n            <Icon type=\"fast-backward\" onClick={()=>{lastPlay(play.id)}}/>\r\n          </div>\r\n          <div className=\"small-icon\">\r\n            <Icon type=\"fast-forward\" onClick={()=>{nextPlay(play.id)}}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"d-f inventory c-p\" onClick={()=>{isShowSongList()}}>\r\n            <span>列表</span>\r\n            <Icon type=\"menu-unfold\" className=\"menu-unfold\"/>\r\n            <span>{pList.length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AudioPlay","/**\r\n * 作为layout入口文件,整合了三个内容,分别是\r\n * 左侧的list菜单.\r\n * 右侧的内容,路由子页面,\r\n * 下面的播放界面\r\n * \r\n * 其中点击左侧联动右侧,点击右侧里面的播放部分联动底部.点击底部什么都不联动\r\n * \r\n * 除了布局之外，这个根组件页面还承担着axios请求个人信息的功能\r\n */\r\nimport React, { useEffect } from 'react'\r\nimport Aside from './aside'\r\nimport LayoutMain from './main'\r\nimport Login from '../components/login'\r\nimport AudioPlay from '../components/audio-play'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { loginStatus, updateUserInfo } from '../rxStore/user'\r\nimport http from '../api/index'\r\nimport './style.scss'\r\nconst Layout = () => {\r\n  let currentLoginStatus = useObservable(() => loginStatus.asObservable()) || loginStatus.status\r\n  useEffect(()=>{\r\n    http({\r\n      url:'/spi/user/info',\r\n      loding:'正在获取个人信息'\r\n    }).then(res=>{\r\n      console.log(res);\r\n      \r\n      updateUserInfo({ ...res, loginStatus: true })\r\n    })\r\n  },[])\r\n\r\n  if (!currentLoginStatus) return(<></>)\r\n  \r\n  \r\n  return(\r\n    <Router>\r\n      <section className=\"layout-box\">\r\n        <Aside></Aside>\r\n        <LayoutMain></LayoutMain>\r\n      </section>\r\n      <section className=\"layout-footer\">\r\n        <AudioPlay />\r\n      </section>\r\n      { currentLoginStatus.status ? <Login /> : '' }\r\n    </Router>\r\n  )\r\n}\r\nexport default Layout\r\n","/**\r\n * 因为思前想后,还是模仿的QQ音乐的客户端的UI/交互/布局\r\n * 作为入口,需要有 layout 管理大体的显示内容\r\n * 如果有其他的路由内容,再添加\r\n */\r\nimport React from 'react';\r\nimport LayoutBox from './layout'\r\nimport './style/reset-style.css'\r\nimport './style/public-use.css'\r\nimport './style/and-style.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <LayoutBox></LayoutBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}