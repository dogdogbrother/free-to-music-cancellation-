{"version":3,"sources":["rxStore/user.js","layout/aside/index.js","pages/default-search-page/index.js","pages/song-menu/index.js","api/index.js","rxStore/playRx.js","components/song-list/index.js","pages/wy-search-result/index.js","pages/qq-search-result/index.js","pages/sl-search-result/index.js","pages/upload-song/index.js","pages/my-like/index.js","layout/main/index.js","components/login/index.js","components/audio-play/index.js","layout/index.js","App.js","serviceWorker.js","index.js"],"names":["loginStatus","BehaviorSubject","status","setLoginStatus","value","next","userInfo","accountName","gender","fonds","name","_id","avatar_url","updateUserInfo","obj","Aside","cUserInfo","useObservable","asObservable","signOut","document","cookie","message","success","infoPopover","className","onClick","style","textAlign","placement","content","trigger","size","src","children","match","location","pathname","to","type","length","Title","Typography","Paragraph","Text","Presentation","level","strong","mark","underline","QqExplain","WyExplain","SlExplain","DefaultSearchPage","Search","Input","useState","platform","setPlatform","SearchButton","withRouter","history","placeholder","enterButton","onSearch","searchVlue","push","state","handlerSearch","width","Group","defaultValue","buttonStyle","onChange","evnt","target","Button","SongMenu","split","axios","interceptors","request","use","config","headers","error","Promise","reject","http","url","method","parm","loding","resolve","hide","loading","data","then","res","catch","response","warning","msg","currentPlay","img","art","id","setCurrentPlay","play","playList","pushPlayList","list","setFormat","number","Math","floor","SongList","listData","playSong","song","action","isExist","find","item","source","getQqUrl","getSlUrl","getWyUrl","get","req_0","midurlinfo","purl","like","addUserFonds","dislike","songArr","updateUserFonds","span","map","index","key","theme","title","album","duration","WySearchResultRouter","props","songList","setSongList","useEffect","pathState","result","code","songs","artists","singers","join","QQsearchResultRouter","singer","interval","mid","SlSearchResultRouter","songName","author","songUrl","coverUrl","WrappedUpdate","Form","create","imageUrl","setImageUrl","setLoading","songPath","setSongPath","coverPath","setCoverPath","confirm","Modal","Authorization","updateProps","accept","info","file","path","updateImage","listType","showUploadList","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","postUpdateMusic","values","verify","onOk","getFieldDecorator","form","uploadButton","onSubmit","e","preventDefault","validateFields","err","Item","alt","rules","required","prefix","color","htmlType","MyLike","LayoutMain","exact","component","SlsearchResultRouter","UploadSong","WrappedLogin","isLogin","setIsLogin","handleSubmit","password","affirmPassword","AudioPlay","pList","showListBox","setShowListBox","nextPlay","forEach","deleteSongListItem","splice","deletePlayList","controls","autoPlay","onEnded","alert","Layout","currentLoginStatus","console","log","App","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fdf0184.chunk.js","sourcesContent":["import { BehaviorSubject } from \"rxjs\"\r\n\r\n// 这个的目的是控制登陆注册的弹窗的显示与否\r\nexport const loginStatus = new BehaviorSubject({\r\n  status: false\r\n})\r\n\r\nexport const setLoginStatus = (value) => {\r\n  loginStatus.next({\r\n    status: value\r\n  })\r\n}\r\n// 这个就是全局的用户信息，例如有头像，性别，名字啥的\r\nexport const userInfo = new BehaviorSubject({\r\n  loginStatus: false, //默认是未登录状态\r\n  accountName:'',\r\n  gender:'',\r\n  fonds:[],\r\n  name:'',\r\n  _id:'',\r\n  avatar_url:''\r\n})\r\n\r\nexport const resetUserInfo = () => {\r\n  userInfo.next({\r\n    loginStatus: false, //默认是未登录状态\r\n    accountName:'',\r\n    gender:'',\r\n    fonds:[],\r\n    name:'',\r\n    _id:'',\r\n    avatar_url:''\r\n  })\r\n}\r\n\r\n// 单纯的更新个人信息资料\r\nexport const updateUserInfo = (obj) => {\r\n  let value = userInfo.value\r\n  userInfo.next({\r\n    ...value,\r\n    ...obj\r\n  })\r\n}\r\n\r\n//就是添加我的喜欢的歌曲\r\nexport const addUserFonds = (obj) => {\r\n  let value = userInfo.value\r\n  if(!value.fonds.find(item=>item.id===obj.id)){\r\n    value.fonds.push(obj)\r\n    userInfo.next({\r\n      ...value,\r\n    })\r\n  }\r\n}\r\n\r\n//这个其实是delete，但是操作的方式是全部替换，所以叫做 update\r\nexport const updateUserFonds = (songArr) => {\r\n  let value = userInfo.value\r\n  value.fonds = songArr\r\n  userInfo.next({\r\n    ...value,\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { Icon, Avatar, Popover, message } from 'antd';\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { setLoginStatus, userInfo, resetUserInfo } from '../../rxStore/user'\r\n\r\nimport './style.scss'\r\n\r\nconst Aside = ()=> {\r\n  // const [state, setState] = useState(false)\r\n  let cUserInfo = useObservable(() => userInfo.asObservable()) || userInfo\r\n\r\n  const loginOpration = () => { // 打开登陆卡片\r\n    setLoginStatus({ status: true })\r\n  }\r\n  \r\n  const signOut = () => { // 退出登陆,清除cookie和重置登陆信息\r\n    document.cookie = 'token = expires=Thu, 01 Jan 1970 00:00:01 GMT;'\r\n    resetUserInfo()\r\n    message.success('已退出');\r\n  }\r\n  const infoPopover = (\r\n    <ul className=\"infoPopover\">\r\n      <li>个人中心</li>\r\n      <li>账号设置</li>\r\n      <li onClick={() => { signOut() }}>退出</li>\r\n    </ul>\r\n  )\r\n  return(\r\n    <div className=\"layout-aside-box p-20\">\r\n      {\r\n        cUserInfo.loginStatus ?\r\n        <div style={{textAlign: 'center'}} className=\"m-b-5\">\r\n          <div>\r\n            <Popover placement=\"bottomLeft\" content={infoPopover} trigger=\"hover\" className=\"m-b-5 c-p\" >\r\n              <Avatar size={66} src={cUserInfo.avatar_url}>{cUserInfo.name}</Avatar>\r\n            </Popover>\r\n          </div>\r\n          <span>{cUserInfo.name}</span>\r\n        </div>\r\n        \r\n        :\r\n          <div style={{textAlign: 'center'}}>\r\n            <Avatar size={66} className=\"c-p\" onClick={() => { loginOpration() }}>singo in</Avatar>\r\n          </div>\r\n      }\r\n        <div>\r\n          <p className=\"menu-title\">在线音乐</p>\r\n          <ul>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/' ? 'aside-active' : ''}>\r\n                  <Link to=\"/\">\r\n                    <Icon type=\"search\"/><span>搜索歌曲</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/song-menu' ? 'aside-active' : ''}>\r\n                  <Link to=\"/song-menu\">\r\n                    <Icon type=\"customer-service\"/><span>查看歌单</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n          </ul>\r\n        </div>\r\n          <div>\r\n            <p className=\"menu-title\">我的音乐</p>\r\n            <ul>\r\n            <Route\r\n              children={(match)=>(\r\n                <li className={match.location.pathname === '/wy-like' ? 'aside-active' : ''}>\r\n                  <Link to=\"/my-like\">\r\n                    <Icon type=\"heart\"/><span>我的喜欢 ({ cUserInfo.fonds ? cUserInfo.fonds.length : ''})</span>\r\n                  </Link>\r\n                </li>\r\n              )}>\r\n            </Route>\r\n              {/* <li>\r\n                <Icon type=\"heart\"/>\r\n                <span>我的喜欢 ({ cUserInfo.fonds ? cUserInfo.fonds.length : ''})</span>\r\n              </li> */}\r\n              <li>\r\n                <Icon type=\"desktop\" />\r\n                <span>本地和下载</span>  \r\n              </li>\r\n              <Route\r\n                children={(match)=>(\r\n                  <li className={match.location.pathname === '/upload-song' ? 'aside-active' : ''}>\r\n                    <Link to=\"/upload-song\">\r\n                      <Icon type=\"upload\"/><span>上传歌曲</span>\r\n                    </Link>\r\n                  </li>\r\n                )}>\r\n              </Route>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n          <p className=\"menu-title\">音乐台介绍</p>\r\n          <ul>\r\n            <li>\r\n              <Icon type=\"exception\"/>\r\n              <span>功能介绍</span>\r\n            </li>\r\n            <li>\r\n              <Icon type=\"pushpin\" />\r\n              <span>我要提意见</span>  \r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Aside","/**\r\n  hooks的值有\r\n    1. platform,0为QQ音乐/1为网易云音乐/2为林悦台\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Typography, Input, Radio  } from 'antd';\r\nimport './style.scss'\r\nimport { withRouter } from \"react-router-dom\";\r\nconst { Title, Paragraph, Text } = Typography\r\nconst DefaultSearchPage = ()=> {\r\n  const { Search } = Input;\r\n  const [platform, setPlatform] = useState(0);\r\n  /**\r\n   * \r\n   */\r\n  const handlerSearch = (searchVlue,history)=> {  \r\n    //点击搜索按钮时执行此函数,给新路由带上搜索的 search 值和 platform 值\r\n    if (platform === 0) {\r\n      history.push({ pathname:'qq-search-result', state:{ searchVlue, platform }})\r\n    }else if(platform === 1){\r\n      history.push({ pathname:'wy-search-result', state:{ searchVlue, platform }})\r\n    }else{\r\n      history.push({ pathname:'sl-search-result', state:{ searchVlue, platform }})\r\n    }\r\n    \r\n  }\r\n  const SearchButton = withRouter(({history})=>{\r\n    return (\r\n      <Search\r\n        placeholder=\"暂时只支持搜索歌曲名称\"\r\n        enterButton=\"搜索\"\r\n        size=\"large\"\r\n        onSearch={value => { handlerSearch(value,history) }}\r\n        style={{ width: 280 }}\r\n      />\r\n    )\r\n  })\r\n  return(\r\n    <div className=\"default-search-page\">\r\n      <Presentation/>\r\n      <div className=\"search-box\">\r\n        <div className=\"m-b-20\">\r\n          <SearchButton/>\r\n        </div>\r\n        <div className=\"m-b-20\">\r\n          <Radio.Group defaultValue={platform} buttonStyle=\"solid\" onChange={(evnt)=>{setPlatform(evnt.target.value)}}>\r\n            <Radio.Button value={0}>QQ音乐</Radio.Button>\r\n            <Radio.Button value={1}>网易云音乐</Radio.Button>\r\n            <Radio.Button value={2}>林悦台</Radio.Button>\r\n          </Radio.Group>\r\n        </div>\r\n        <div>\r\n          { platform === 0 && <QqExplain/> }\r\n          { platform === 1 && <WyExplain/> }\r\n          { platform === 2 && <SlExplain/> }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n * 搜索页面的介绍组件\r\n */\r\nconst Presentation = ()=> {\r\n  return(\r\n    <div className=\"presentation\">\r\n      <div>\r\n        <Title level={2}>搜索功能介绍</Title>\r\n        <Paragraph>\r\n          你可以通过选择下面的按钮来控制你搜索的结果来源是<Text strong> 网易云音乐 </Text>还是<Text strong> QQ音乐 </Text>.\r\n          如果因为 <Text mark>版权</Text> 或是 <Text mark>封禁原因</Text> 而搜索不到歌曲或是播放不成功时,可以选择 <Text strong> 林悦台 </Text>试一试.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          <Text strong> 林悦台 </Text>是我个人的服务器,你可以在<Text strong>上传歌曲</Text>页面去上传歌曲资源,然后就能搜索到了,目前我已经长传了部分的<Text underline>周杰伦</Text> 歌曲,和 <Text underline>李志</Text> 的歌曲.\r\n        </Paragraph>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n/**\r\n *搜索页面的搜索功能组件\r\n */\r\nconst QqExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>QQ音乐的说明</Title>\r\n      <Paragraph>\r\n        你有可能会<Text strong> 播放失败 </Text>是因为有些曲目因为版权问题无法找到资源,而且已经可以播放的歌曲链接也会因为时间而KEY值过期,暂时这样,后面我再想办法优化.如果你发现播放失败,请在播放列表中删除它重新播放吧.\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\nconst WyExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>网易云音乐的说明</Title>\r\n      <Paragraph>\r\n        相比较恶心的QQ音乐,网易云的接口就很友好了,github上有nodeJS版本的API,绝大功能都有,如果你需要网易云音乐的一些功能,请<Text strong> 私聊我 </Text>或是在<Text strong> 我要提意见 </Text>里面提出\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\nconst SlExplain = () => {\r\n  return(\r\n    <div>\r\n      <Title level={2}>林悦台的说明</Title>\r\n      <Paragraph>\r\n        我服务器中的歌都是超清的,例如周杰伦的歌30MB左右,李志的歌20MB左右,这会导致播放准备时间比较长,请耐心等待下.\r\n      </Paragraph>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DefaultSearchPage","import React from 'react'\r\n\r\n\r\nconst SongMenu = ()=> {\r\n  return(\r\n    <div className=\"defaule-page\">歌单页面</div>\r\n  )\r\n}\r\n\r\nexport default SongMenu","import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nif (document.cookie && document.cookie.split('oken=')[1]) {\r\n  // 这个地方拿到cokie中的token值,再赋值到 Authorization 头中\r\n  axios.interceptors.request.use(\r\n    config => {\r\n      config.headers[\"Authorization\"] = 'Bearer ' + document.cookie.split('oken=')[1]\r\n      return config\r\n    },\r\n    function (error) {\r\n      return Promise.reject(error) \r\n    }\r\n  )\r\n}\r\n\r\n// axios.interceptors.response.use(\r\n//   response => {\r\n//     return response\r\n//   },\r\n//   error => {\r\n//     if (error.response.status === 401) {\r\n//       message.warning('暂无权限操作,请登陆');\r\n//     }else {\r\n//       return Promise.reject(error)\r\n//     }\r\n    \r\n//   }\r\n// )\r\n\r\nclass Http {\r\n  http({ url, method=\"get\", parm={}, loding=\"\" }) {\r\n    return new Promise((resolve, reject) => {\r\n      const hide = message.loading(loding, 0);\r\n      axios({\r\n        method,\r\n        url,\r\n        data:parm,\r\n        'responseType': 'json'\r\n      }).then(res => {\r\n        hide()\r\n        resolve(res.data)\r\n      }).catch(error => {\r\n        hide()\r\n        if (error.response.status === 401) {\r\n          message.warning('暂无权限操作,请登陆');\r\n        }else {\r\n          return Promise.reject(error)\r\n        }\r\n        reject({\r\n          msg: error\r\n        })\r\n      })\r\n    })\r\n  }\r\n}\r\nlet http = new Http()\r\nexport default http.http","import { BehaviorSubject } from \"rxjs\"\r\n\r\nexport const currentPlay = new BehaviorSubject({\r\n  url:'',\r\n  img:'',\r\n  name:'',\r\n  art:'', //歌手\r\n  id:'',\r\n})\r\n\r\nexport const setCurrentPlay = (obj)=>{ \r\n  let play = currentPlay.value\r\n  currentPlay.next({\r\n    ...play,\r\n    ...obj\r\n  })\r\n}\r\n\r\n//播放列表是个数组,里面存的是对象,对应的就是当前播放的格式\r\nexport const playList = new BehaviorSubject([])\r\n\r\nexport const pushPlayList = (obj)=>{\r\n  //其实push进来应该有别的操作,例如检查这个歌曲是否已经在列表中了,没有的话再添加\r\n  let list = playList.value\r\n  playList.next([...list,obj])\r\n}\r\n\r\nexport const deletePlayList = (index)=>{\r\n  playList.value.splice(index,1)\r\n  playList.next([...playList.value])\r\n}\r\n\r\n","/**\r\n *  listDta 是数据格式定义好了的数组内容,要求有如下\r\n *  {\r\n *    name:string,      歌曲名字\r\n *    art:string,       作家名字\r\n *    album:tring       专辑名称\r\n *    duration:number   时长,这个组件内处理\r\n *    source:qq or wy   来自于哪个资源\r\n *    id:number         歌曲的id,用于搜索的唯一键\r\n *  }\r\n * \r\n *  点击播放的话,先判断是qq还是网易,网易的比较好办,有现成的接口,qq的有加密有点麻烦,虽然多处理处理\r\n */\r\n\r\nimport React from 'react'\r\nimport { Row, Col, Icon, Tooltip } from 'antd'\r\nimport axios from 'axios'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport http from '../../api'\r\nimport { setCurrentPlay, playList, pushPlayList } from '../../rxStore/playRx'\r\nimport { userInfo, addUserFonds, updateUserFonds } from '../../rxStore/user'\r\nimport './style.scss'\r\n\r\nconst SongList = ({listData})=>{\r\n  let cUserInfo = useObservable(() => userInfo.asObservable()) || userInfo\r\n  const playSong = (song,action) => {\r\n    //在申请网络接口前,我们要先判断下播放列表中是否有了这首歌,有的话就播放这个首歌,不要请求接口\r\n    const isExist = playList.value.find(item=>item.id===song.id)\r\n    if (isExist) return setCurrentPlay(isExist)\r\n    if (song.source === 'qq') return getQqUrl(song,action)\r\n    if (song.source === 'sl') return getSlUrl(song,action)\r\n    getWyUrl(song,action)\r\n  }\r\n  const getQqUrl = (song,action) => {\r\n    // qq音乐的实在是麻烦了,先用mid(id)申请个接口,接口里面有一个purl,拿到这个再拼接一下才能拿到真正播放地址\r\n    axios.get(`/qpi/qq/songUrl?id=${song.id}`).then(res=>{\r\n      let url = 'http://122.226.161.25/amobile.music.tc.qq.com/'+res.data.req_0.data.midurlinfo[0].purl\r\n      //拿到了播放地址,要做两个操作.一个是切换当前播放歌曲,二是push进播放列表 \r\n      if (!action) {     \r\n        setCurrentPlay({\r\n          url,\r\n          id:song.id,\r\n          name:song.name,\r\n          art:song.art,\r\n          img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n        })\r\n      }\r\n      pushPlayList({\r\n        art:song.art,\r\n        url,\r\n        id:song.id,\r\n        name:song.name,\r\n        img:'',\r\n      })\r\n    })\r\n  }\r\n  const getWyUrl = (song,action) => {\r\n    axios.get(`/wpi/song/url?id=${song.id}`).then(res=>{\r\n      if (!action) {\r\n        setCurrentPlay({\r\n          url:res.data.data[0].url,\r\n          id:song.id,\r\n          name:song.name,\r\n          art:song.art,\r\n          img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n        })\r\n      }\r\n      pushPlayList({\r\n        art:song.art,\r\n        url:res.data.data[0].url,\r\n        id:song.id,\r\n        name:song.name,\r\n        img:'',\r\n      })\r\n    })\r\n  }\r\n  const getSlUrl = (song,action) => {\r\n    if (!action) {\r\n      setCurrentPlay({\r\n        url:song.url,\r\n        id:song.id,\r\n        name:song.name,\r\n        art:song.art,\r\n        img:'',//这个没有,qq音乐的要再请求一个接口才有照片的.\r\n      })\r\n    }\r\n    pushPlayList({\r\n      art:song.art,\r\n      url:song.url,\r\n      id:song.id,\r\n      name:song.name,\r\n      img:'',\r\n    })\r\n  }\r\n  //这个函数是说，点击喜欢，即刻点亮红心，发送请求，其实就是把id，url什么的song信息给存到后端的个人信息的数组里面去\r\n  const like = (item)=>{\r\n    http({\r\n      url:'/spi/user/likesong',\r\n      method:'post',\r\n      parm:item,\r\n      loding:'正在喜欢中...'\r\n    }).then(res=>{\r\n      //更新全局的info信息\r\n      addUserFonds(res)\r\n    })\r\n  }\r\n  //已经点了喜欢的歌曲，再点击就是不喜欢了\r\n  const dislike = (item) => {\r\n    http({\r\n      url:'/spi/user/dislikesong',\r\n      method:'post',\r\n      parm:item,\r\n      loding:'正在不喜欢...'\r\n    }).then(res=>{\r\n      //更新全局的info.fonds信息\r\n      updateUserFonds(res)\r\n    })\r\n  }\r\n  return(\r\n    <ul className=\"song-list\">\r\n      <li className=\"title\">\r\n        <Row>\r\n          <Col span={9} className=\"ellipsis\">歌曲</Col>\r\n          <Col span={5} className=\"ellipsis\">歌手</Col>\r\n          <Col span={8} className=\"ellipsis\">专辑</Col>\r\n          <Col span={2} className=\"ellipsis\">时长</Col>\r\n        </Row>\r\n      </li>\r\n      {\r\n        listData.map((song,index) =>{\r\n          return(\r\n            <li className=\"song\" key={index}>\r\n              <Row>\r\n                <Col span={9} className=\"d-f ellipsis\">\r\n                  {\r\n                    cUserInfo.fonds.find(item=>item.id===song.id) ?\r\n                    <div><Icon type=\"heart\" theme=\"filled\" className=\"m-r-5 c-p\" onClick={ ()=>{ dislike(song, true) } }/></div> :\r\n                    <Icon type=\"heart\" className=\"m-r-5 c-p collect-icon\" onClick={ ()=>{ like(song, true) } }/>\r\n                  }\r\n                  <div className=\"song-name\">\r\n                    <span className=\"m-r-5 c-p ellipsis\">{song.name}</span>\r\n                  </div>\r\n                  <div className=\"d-f d-b-a operation-icon-box\">\r\n                    <Tooltip title=\"播放\" placement=\"bottom\">\r\n                      <Icon \r\n                        type=\"play-circle\" \r\n                        className=\"operation-icon\"\r\n                        onClick={()=>{playSong(song)}}/>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"添加至播放列表\" placement=\"bottom\">\r\n                      <Icon \r\n                        type=\"plus-circle\" \r\n                        className=\"operation-icon\"\r\n                        onClick={()=>{playSong(song,'noPlay')}}/>\r\n                    </Tooltip>\r\n                  </div>\r\n                </Col>\r\n                <Col span={5}>{song.art}</Col>\r\n                <Col span={8}>{song.album || ''}</Col>\r\n                <Col span={2}>{setFormat(song.duration,'minute')} : {setFormat(song.duration,'second')}</Col>\r\n              </Row>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\nconst setFormat = (number,type) => {\r\n  let res = null\r\n  if (type === 'minute') {\r\n    res = Math.floor((number%3600000)/60000)\r\n  }else{\r\n    res = Math.floor((number%60000)/1000)\r\n  }\r\n  if (res<10) return res = '0' + res\r\n  return res\r\n}\r\nexport default SongList","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport SongList from '../../components/song-list'\r\nconst WySearchResult = (props) => {\r\n  const [songList, setSongList] = useState([]); //歌曲列表数据\r\n  useEffect(()=>{\r\n    let pathState = props.location.state\r\n    axios.get(`/wpi/search?keywords=${pathState.searchVlue}`,{}).then(res=>{\r\n      let data = res.data.result \r\n      if (res.data.code === 200) {\r\n        setSongList(data.songs.map(item=>{\r\n          return {\r\n            name:item.name,\r\n            art:item.artists[0].name,\r\n            album:item.album.name,\r\n            duration:item.duration,\r\n            source:'wy',\r\n            id:item.id\r\n          }\r\n        }))\r\n      }\r\n    })\r\n  },[props.location.state])\r\n  return(\r\n    <div className=\"song-list\">\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst WySearchResultRouter = withRouter(WySearchResult);\r\nexport default WySearchResultRouter","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SongList from '../../components/song-list'\r\nimport axios from 'axios'\r\nimport '../../common/song-list-style.scss'\r\nconst QQsearchResult = (props) => {\r\n  //歌曲列表数据 这个songlist要求比较严格,因为是要送到子组件去使用的\r\n  const [songList, setSongList] = useState([]); \r\n  useEffect(()=>{\r\n    let pathState = props.location.state\r\n    axios.get(`/qpi/qq/songList?name=${pathState.searchVlue}`)\r\n    .then(res=>{\r\n      setSongList(res.data.data.song.list.map(item=>{\r\n        return {\r\n          name:item.title,\r\n          art:singers(item.singer),\r\n          album:item.album.name || '',\r\n          duration:item.interval * 1000,\r\n          source:'qq',\r\n          id:item.mid\r\n        }\r\n      }))\r\n    })\r\n  },[props.location.state])\r\n  return(\r\n    <div className=\"song-list\">\r\n      {/* 这里应该是个tabs页,然后点击歌曲就显示歌曲结果,点击歌手就显示搜索歌手的结果*/}\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst singers = (singers)=> {\r\n  let arr = singers.map(item=>{\r\n    return item.name\r\n  })\r\n  return arr.join('/')\r\n}\r\nconst QQsearchResultRouter = withRouter(QQsearchResult);\r\nexport default QQsearchResultRouter","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport SongList from '../../components/song-list'\r\n// 这个页面暂时是糊弄页面,不管你发的啥我都是给的周杰伦的歌\r\nconst SlSearchResult = (props) => {\r\n  const [songList, setSongList] = useState([]); //歌曲列表数据\r\n  useEffect(()=>{\r\n    let pathState = props.location.state\r\n    axios.get(`/spi/music/searchsong?keywords=${pathState.searchVlue}`)\r\n    .then(res=>{\r\n      setSongList(res.data.map(item=>{\r\n        return {\r\n          name:item.songName,\r\n          art:item.author,\r\n          album:'',\r\n          duration:0,\r\n          source:'sl',\r\n          id:item._id,\r\n          url:item.songUrl,\r\n          img:item.coverUrl\r\n        }\r\n      }))\r\n    })\r\n  },[props.location.state])\r\n  return(\r\n    <div className=\"song-list\">\r\n      {/* 这里应该是个tabs页,然后点击歌曲就显示歌曲结果,点击歌手就显示搜索歌手的结果*/}\r\n      <div className=\"res-container\">\r\n        <SongList listData={songList}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst SlSearchResultRouter = withRouter(SlSearchResult);\r\nexport default SlSearchResultRouter","import React, { useState } from 'react'\r\nimport { Upload, message, Button, Icon, Form, Input, Modal } from 'antd';\r\n\r\nimport http from '../../api'\r\nimport './style.scss'\r\n\r\nconst UpdataSong = (props)=> {\r\n\r\n  const [ imageUrl, setImageUrl ] = useState(null);\r\n  const [ loading, setLoading ] = useState(false);\r\n  const [ songPath, setSongPath ] = useState(null); \r\n  const [ coverPath, setCoverPath ] = useState('');\r\n\r\n  const { confirm } = Modal;\r\n  \r\n  const Authorization = 'Bearer ' + document.cookie.split('oken=')[1];\r\n  \r\n  const updateProps = {\r\n    name: 'file',\r\n    action: 'spi/music/updatesong',\r\n    headers: {\r\n      Authorization\r\n    },\r\n    accept:'.mp3,.flac,.wma',\r\n    onChange(info) {\r\n      if (info.file.status !== 'uploading') {\r\n        setSongPath(null)\r\n      }\r\n      if (info.file.status === 'done') {\r\n        setSongPath(info.file.response.data.path)\r\n      } else if (info.file.status === 'error') {\r\n        message.error('上传歌曲失败,请检查是否已登陆');\r\n        setSongPath(null)\r\n      }\r\n    },\r\n\r\n  };\r\n\r\n  const updateImage = {\r\n    name:\"avatar\",\r\n    listType:\"picture-card\",\r\n    className:\"avatar-uploader\",\r\n    showUploadList:false,\r\n    action:\"/spi/music/updatecover\",\r\n    accept:'.jpg,.jpeg,.png',\r\n    headers: {\r\n      Authorization\r\n    },\r\n    onChange:info => {\r\n      if (info.file.status === 'uploading') {\r\n        setLoading(true);\r\n        setCoverPath('');\r\n        return;\r\n      }\r\n      if (info.file.status === 'done') {\r\n        setCoverPath(info.file.response.data)\r\n        getBase64(info.file.originFileObj, imageUrl =>{\r\n          setImageUrl(imageUrl)\r\n          setLoading(true);\r\n        });\r\n      }else if (info.file.status === 'error') {\r\n        message.error('上传图片失败,请检查是否已登陆');\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n  \r\n  const handleSubmit = e =>{\r\n    e.preventDefault();\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (!songPath) return message.error(`请先上传歌曲!`);\r\n        postUpdateMusic(values, false);\r\n      }\r\n    })\r\n  }\r\n\r\n  const postUpdateMusic = (values, verify) => {\r\n    http({\r\n      method:'post',\r\n      url:'/spi/music/updatemusic',\r\n      parm:{ ...values, songPath, coverPath, verify},\r\n      loding:'上传中'\r\n    }).then(res=>{\r\n      if (res.code === 100) {\r\n        message.success('上传成功');\r\n      } else if (res.code === 201) {\r\n        confirm({\r\n          title: '提示',\r\n          content: res.msg,\r\n          onOk() {\r\n            postUpdateMusic(values, true)\r\n          },\r\n        });\r\n        \r\n      }\r\n      \r\n    }).catch( () => {\r\n      message.error('上传失败')\r\n    })\r\n  }\r\n\r\n  const { getFieldDecorator } = props.form\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <Icon type={loading ? 'loading' : 'plus'} />\r\n      <div className=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  )\r\n\r\n  return(\r\n    <div className=\"update-page\">\r\n      \r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Item>\r\n          <Upload {...updateProps}>\r\n            <Button>\r\n              <Icon type=\"upload\" />上传歌曲\r\n            </Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Upload {...updateImage}>\r\n            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('songName', {\r\n            rules: [{ required: true, message: '歌曲不能为空' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"customer-service\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"歌曲名称\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('author', {\r\n            rules: [{ required: true, message: '歌手不能为空' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"歌手\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('describe')(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"歌曲描述\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">登录</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\n\r\nconst WrappedUpdate = Form.create({ name: 'update_song' })(UpdataSong);\r\n\r\nexport default WrappedUpdate\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let client = new OSS({\r\n      //   region: 'oss-cn-hangzhou',\r\n      //   accessKeyId: 'LTAI4FovhkFEKifXapYhrJGf',\r\n      //   accessKeySecret: '0WZwmxQ86rW3O42gb9CSoguBYY0jN6',\r\n      //   // bucket: 'public-read-write',\r\n      //   bucket:'music-song'\r\n      // })\r\n      \r\n      \r\n    //   // client().multipartUpload('测试上传一个mp4',reader.result)","import React from 'react'\r\nimport SongList from '../../components/song-list'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { userInfo } from '../../rxStore/user'\r\n\r\nconst MyLike = ()=> {\r\n  let cUserInfo = useObservable(() => userInfo.asObservable()) || userInfo\r\n  return(\r\n    <div className=\"song-list\">\r\n      <div className=\"res-container\">\r\n        <SongList listData={cUserInfo.fonds ? cUserInfo.fonds : []}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyLike","import React from 'react'\r\n// import {BrowserRouter} from \"react-router-dom\";\r\nimport {Route, Switch} from \"react-router\";\r\nimport DefaultSearchPage from '../../pages/default-search-page'\r\nimport SongMenu from '../../pages/song-menu'\r\nimport WySearchResultRouter from '../../pages/wy-search-result'\r\nimport QQsearchResultRouter from '../../pages/qq-search-result'\r\nimport SlsearchResultRouter from '../../pages/sl-search-result'\r\nimport UploadSong from '../../pages/upload-song'\r\nimport MyLike from '../../pages/my-like'\r\nconst LayoutMain = ()=> {\r\n  return(\r\n    <div className=\"layout-main-box\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={DefaultSearchPage}/>\r\n        <Route exact path=\"/song-menu\" component={SongMenu}/>\r\n        <Route exact path=\"/wy-search-result\" component={WySearchResultRouter}/>\r\n        <Route exact path=\"/qq-search-result\" component={QQsearchResultRouter}/>\r\n        <Route exact path=\"/sl-search-result\" component={SlsearchResultRouter}/>\r\n        <Route exact path=\"/upload-song\" component={UploadSong}/>\r\n        <Route exact path=\"/my-like\" component={MyLike}/>\r\n        {/* <Route exact path=\"/page2\" component={组件2}/>\r\n        <Route exact path=\"/page1/add\" component={add组件}/> */}\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutMain","import React, { useState } from 'react'\r\nimport { Form, Icon, Input, Button, message } from 'antd'\r\nimport http from '../../api'\r\nimport { setLoginStatus, updateUserInfo } from '../../rxStore/user'\r\n\r\nimport './style.scss'\r\n\r\nconst Login = (props)=> {\r\n  const [ isLogin, setIsLogin ] = useState(true);\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (isLogin) {  //假如 isLogin 是true,就代表是登陆,否则就是注册\r\n          http({\r\n            method:'post',\r\n            url:'/spi/login',\r\n            parm:values,\r\n            loding:'登陆中'\r\n          }).then(res=>{\r\n            message.success('登陆成功');\r\n            setLoginStatus(false)\r\n            updateUserInfo({ ...res, loginStatus: true })\r\n          }).catch( error => {\r\n            message.error('账号密码错误')\r\n          })\r\n        }else{\r\n          if (values.password !== values.affirmPassword) {\r\n            return message.error('密码不一致,请检查')\r\n          }\r\n          http({\r\n            method:'post',\r\n            url:'/spi/register',\r\n            parm:values\r\n          }).then(res=>{\r\n            message.success('注册成功,请登录')\r\n            values.name = ''\r\n            values.password = ''\r\n            values.affirmPassword = ''\r\n            setIsLogin(true)\r\n          }).catch(err=>{\r\n            message.error('注册失败')\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  const { getFieldDecorator } = props.form\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"box\">\r\n        <div className=\"wrapper-header d-f-b\">\r\n          <span>{ isLogin ? '登录' : '注册'}</span>\r\n          <Icon type=\"close\" className=\"icon c-p\" onClick={ () => { setLoginStatus(false) } }/>\r\n        </div>\r\n        {\r\n          isLogin ?\r\n          <div className=\"login\">\r\n            <Form onSubmit={handleSubmit} className=\"login-form\">\r\n              <Form.Item>\r\n                {getFieldDecorator('name', {\r\n                  rules: [{ required: true, message: '用户名不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"name\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator('password', {\r\n                  rules: [{ required: true, message: '密码不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">登录</Button>\r\n              </Form.Item>\r\n            </Form>\r\n            <div className=\"d-f opreation\">\r\n                <span className=\"m-r-20 c-p\" onClick={()=>{setIsLogin(false)}}>注册</span>\r\n                <span className=\"c-p\">忘记密码</span>\r\n            </div>\r\n          </div>\r\n          :\r\n          <div className=\"register\">\r\n            <Form onSubmit={handleSubmit} className=\"login-form\">\r\n              <Form.Item>\r\n                {getFieldDecorator('name', {\r\n                  rules: [{ required: true, message: '用户名不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator('password', {\r\n                  rules: [{ required: true, message: '密码不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"密码\"\r\n                    type=\"password\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator('affirmPassword', {\r\n                  rules: [{ required: true, message: '确认密码不能为空' }],\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"请确认密码\"\r\n                    type=\"password\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">注册</Button>\r\n              </Form.Item>\r\n            </Form>\r\n            <div className=\"d-f opreation\">\r\n                <span className=\"m-r-20 c-p\" onClick={()=>{setIsLogin(true)}}>已有账户去登录</span>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst WrappedLogin = Form.create({ name: 'normal_login' })(Login);\r\nexport default WrappedLogin","import React, { useState } from 'react'\r\nimport { Icon } from 'antd'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { currentPlay, setCurrentPlay, playList, deletePlayList } from '../../rxStore/playRx'\r\nimport './style.scss'\r\n\r\nconst AudioPlay = ()=>{\r\n  let play = useObservable(() => currentPlay.asObservable()) || currentPlay.value\r\n  let pList = useObservable(() => playList.asObservable()) || playList.value\r\n  const [showListBox, setShowListBox] = useState(false)\r\n  const nextPlay = (id)=> { \r\n    //点击下一曲和自动播放完了就执行这个函数,首先判断下当前曲目的位置,然后下一曲或是回到第一首,给setCurrentPlay赋值即可\r\n    //事实上这里还有单曲循环啥的很多操作,暂时简化一点\r\n    playList.value.forEach((item,index)=>{\r\n      if (item.id === id) {\r\n        if (index === playList.value.length-1) {\r\n          setCurrentPlay(pList[0])\r\n        }else{\r\n          setCurrentPlay(pList[index+1])\r\n        }\r\n      }\r\n    })\r\n  }\r\n  const lastPlay = (id) => {\r\n    playList.value.forEach((item,index)=>{\r\n      if (item.id === id) {\r\n        if (index === 0) {\r\n          alert('已经是第一首了,上一首上不动了')\r\n        }else{\r\n          setCurrentPlay(playList.value[index-1])\r\n        }\r\n      } \r\n    })\r\n  }\r\n  const deleteSongListItem = (id,index) => {\r\n    if (playList.value.length===1) {\r\n      setCurrentPlay({\r\n        url:'',\r\n        img:'',\r\n        name:'',\r\n        art:'',\r\n        id:''\r\n      })\r\n    }else{\r\n      nextPlay(id)\r\n    }\r\n    deletePlayList(index)\r\n  }\r\n  const isShowSongList = () => {\r\n    setShowListBox(!showListBox)\r\n  }\r\n  const playListSong = (song) => {\r\n    setCurrentPlay(song)\r\n  }\r\n  return (\r\n    <div className=\"play-footer\">\r\n      {/* 我在这个地方暂时插个东西,就是播放列表,样式上我还没想好,先随便写写 */}\r\n      { showListBox && \r\n        <div className=\"play-list-box\">\r\n          <div className=\"play-list-box-title\">我是头部,播放列表</div>\r\n          <ul>\r\n            { \r\n              pList.map((item,index)=>{\r\n                return(\r\n                  <li key={item.id} className=\"m-b-5\">\r\n                    <span className=\"c-p m-r-5\" onClick={()=>{playListSong(item)}}>{item.name}</span>\r\n                    {\r\n                      item.id === play.id &&\r\n                      <Icon type=\"play-circle\" className=\"m-r-5\"/>\r\n                    }\r\n                    <Icon type=\"delete\" onClick={()=>{deleteSongListItem(item.id,index)}}/>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      }\r\n      <div className=\"play-footer-main d-f-b\">\r\n        <div className=\"song-content d-f\">\r\n          <div className=\"img-box\">\r\n            <img src=\"//y.gtimg.cn/music/photo_new/T001R150x150M0000025NhlN2yWrP4.jpg?max_age=2592000\" alt=\"歌手头像\"/> \r\n          </div>\r\n          <div className=\"song-info\">\r\n            <p className=\"info\">\r\n              <span className=\"name\">{play.name}</span>\r\n              <span> - </span>\r\n              <span>{play.art}</span>\r\n            </p>\r\n            <div className=\"song-icon d-f-b\">\r\n              <Icon type=\"heart\" />\r\n              <Icon type=\"align-left\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"play-operate d-f\">\r\n          <audio \r\n            className=\"m-r-10\"\r\n            controls=\"controls\"\r\n            autoPlay=\"autoPlay\"\r\n            onEnded={()=>{nextPlay(play.id)}}\r\n            src={play.url}/>\r\n          <div className=\"small-icon m-r-10\">\r\n            <Icon type=\"fast-backward\" onClick={()=>{lastPlay(play.id)}}/>\r\n          </div>\r\n          <div className=\"small-icon\">\r\n            <Icon type=\"fast-forward\" onClick={()=>{nextPlay(play.id)}}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"d-f inventory c-p\" onClick={()=>{isShowSongList()}}>\r\n            <span>列表</span>\r\n            <Icon type=\"menu-unfold\" className=\"menu-unfold\"/>\r\n            <span>{pList.length}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AudioPlay","/**\r\n * 作为layout入口文件,整合了三个内容,分别是\r\n * 左侧的list菜单.\r\n * 右侧的内容,路由子页面,\r\n * 下面的播放界面\r\n * \r\n * 其中点击左侧联动右侧,点击右侧里面的播放部分联动底部.点击底部什么都不联动\r\n * \r\n * 除了布局之外，这个根组件页面还承担着axios请求个人信息的功能\r\n */\r\nimport React, { useEffect } from 'react'\r\nimport Aside from './aside'\r\nimport LayoutMain from './main'\r\nimport Login from '../components/login'\r\nimport AudioPlay from '../components/audio-play'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { useObservable } from 'rxjs-hooks'\r\nimport { loginStatus, updateUserInfo } from '../rxStore/user'\r\nimport http from '../api/index'\r\nimport './style.scss'\r\nconst Layout = () => {\r\n  let currentLoginStatus = useObservable(() => loginStatus.asObservable()) || loginStatus.status\r\n  useEffect(()=>{\r\n    http({\r\n      url:'/spi/user/info',\r\n      loding:'正在获取个人信息'\r\n    }).then(res=>{\r\n      console.log(res);\r\n      \r\n      updateUserInfo({ ...res, loginStatus: true })\r\n    })\r\n  },[])\r\n\r\n  if (!currentLoginStatus) return(<></>)\r\n  \r\n  \r\n  return(\r\n    <Router>\r\n      <section className=\"layout-box\">\r\n        <Aside></Aside>\r\n        <LayoutMain></LayoutMain>\r\n      </section>\r\n      <section className=\"layout-footer\">\r\n        <AudioPlay />\r\n      </section>\r\n      { currentLoginStatus.status ? <Login /> : '' }\r\n    </Router>\r\n  )\r\n}\r\nexport default Layout\r\n","/**\r\n * 因为思前想后,还是模仿的QQ音乐的客户端的UI/交互/布局\r\n * 作为入口,需要有 layout 管理大体的显示内容\r\n * 如果有其他的路由内容,再添加\r\n */\r\nimport React from 'react';\r\nimport LayoutBox from './layout'\r\nimport './style/reset-style.css'\r\nimport './style/public-use.css'\r\nimport './style/and-style.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <LayoutBox></LayoutBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}